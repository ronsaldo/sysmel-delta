fromExternal: #C import: #printf withType: (:(Char8 pointer)format, :(CVarArg)... :: Int32) __cdecl.

:TestRecord <- RecordWithFields: #{
    first: Int32.
    second: Int32.
}.

export: (
    :getFirst <- (:(TestRecord ref)record :: Int32) __cdecl
        :> record first.

    :getSecond <- (:(TestRecord ref)record :: Int32) __cdecl
        :> record second.
).

external: #C export: (
    :main <- (:(Int32)argc, :(Char8 pointer[argc asSize])argv :: Int32) __cdecl :> {
        :record <- TestRecord#{first: argc. second: argc + 42i32}#{first: argc + 1i32}.
        :a, :b <- argc, argc + 1i32.
        printf("Hello World: %d\n" elements, a).

        :!i <- 1i32.
        while: (i < argc) do: {
            printf("%d loop body: %s\n" elements, i, argv[i asSize]).
        } continueWith: (i := i + 1i32).

        0i32
    }.
).
