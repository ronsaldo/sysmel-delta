let: #printf with: (fromExternal: #C import: #printf withType: (:(Char8 pointer)format, :(CVarArg)... :: Int32) __cdecl).
let: #puts with: (fromExternal: #C import: #puts withType: (Char8 pointer => Void) __cdecl).

export: #main external: #C with: (:(Int32)argc, :(Char8 pointer[argc asSize])argv :: Int32) __cdecl :=> {
    puts("Hello World" elements).

    let: #i mutableWith: 1i32.
    while: (i < argc) do: {
        puts("Loop body" elements).
        puts(argv at: i asSize)
    } continueWith: (i := i + 1i32).

    0i32
}.

##(:[Type]T :(T)x :: T) #[Int32].
##((:[Type]T :(T)x :: T) :=> x) #[Int32].
##(:(Int32)x :: Int32) :=> x

##((:[Type]T :(T)x :: T) :=> x) (0i32)
##0i32

##Int32 pointer
##Int32 pointer

##Char8 pointer[0sz]
