from .sdvmInstructionTypes import *

SdvmTypeVoid = sdvmTypeDef('Void', code = 0)
SdvmTypeBoolean = sdvmTypeDef('Boolean', code = 1)
SdvmTypeInt8 = sdvmTypeDef('Int8', code = 2)
SdvmTypeInt16 = sdvmTypeDef('Int16', code = 3)
SdvmTypeInt32 = sdvmTypeDef('Int32', code = 4)
SdvmTypeInt64 = sdvmTypeDef('Int64', code = 5)
SdvmTypeUInt8 = sdvmTypeDef('UInt8', code = 6)
SdvmTypeUInt16 = sdvmTypeDef('UInt16', code = 7)
SdvmTypeUInt32 = sdvmTypeDef('UInt32', code = 8)
SdvmTypeUInt64 = sdvmTypeDef('UInt64', code = 9)
SdvmTypePointer = sdvmTypeDef('Pointer', code = 10)
SdvmTypeProcedureHandle = sdvmTypeDef('ProcedureHandle', code = 11)
SdvmTypeGCPointer = sdvmTypeDef('GCPointer', code = 12)
SdvmTypeFloat32 = sdvmTypeDef('Float32', code = 13)
SdvmTypeFloat64 = sdvmTypeDef('Float64', code = 14)
SdvmTypeInfo = sdvmTypeDef('Info', code = 15)
SdvmTypeLabel = sdvmTypeDef('Label', code = 16)
SdvmTypeFloatVector64 = sdvmTypeDef('FloatVector64', code = 17)
SdvmTypeIntegerVector64 = sdvmTypeDef('IntegerVector64', code = 18)
SdvmTypeFloatVector128 = sdvmTypeDef('FloatVector128', code = 19)
SdvmTypeIntegerVector128 = sdvmTypeDef('IntegerVector128', code = 20)
SdvmTypeFloatVector256 = sdvmTypeDef('FloatVector256', code = 21)
SdvmTypeIntegerVector256 = sdvmTypeDef('IntegerVector256', code = 22)
SdvmConstOpConstSExt = sdvmConstantOpcodeDef('SdvmOpConstSExt', opcode = 0x0000, description = '"Small signed extended constant"')
SdvmConstOpConstZExt = sdvmConstantOpcodeDef('SdvmOpConstZExt', opcode = 0x0001, description = '"Small zero extended constant"')
SdvmConstOpConstSmallFloat = sdvmConstantOpcodeDef('SdvmOpConstSmallFloat', opcode = 0x0002, description = '"Small floating point constant"')
SdvmConstOpConstSection = sdvmConstantOpcodeDef('SdvmOpConstSection', opcode = 0x0003, description = '"Constant section"')
SdvmConstOpConstImport = sdvmConstantOpcodeDef('SdvmOpConstImport', opcode = 0x0004, description = '"Constant imported value"')
SdvmConstOpConstCString = sdvmConstantOpcodeDef('SdvmOpConstCString', opcode = 0x0005, description = '"Constant null terminated C string"')
SdvmConstOpConstString = sdvmConstantOpcodeDef('SdvmOpConstString', opcode = 0x0006, description = '"Constant non-null terminated string"')
SdvmConstBoolean = sdvmConstantDef('SdvmConstBoolean', opcode = 0x0081, type = SdvmTypeBoolean, description = '"Boolean constant."')
SdvmConstInt8 = sdvmConstantDef('SdvmConstInt8', opcode = 0x0101, type = SdvmTypeInt8, description = '"Int8 constant."')
SdvmConstInt16 = sdvmConstantDef('SdvmConstInt16', opcode = 0x0181, type = SdvmTypeInt16, description = '"Int16 constant."')
SdvmConstInt32 = sdvmConstantDef('SdvmConstInt32', opcode = 0x0201, type = SdvmTypeInt32, description = '"Int32 constant."')
SdvmConstInt64SExt = sdvmConstantDef('SdvmConstInt64SExt', opcode = 0x0281, type = SdvmTypeInt64, description = '"Signed extended small Int64 constant."')
SdvmConstInt64ZExt = sdvmConstantDef('SdvmConstInt64ZExt', opcode = 0x0283, type = SdvmTypeInt64, description = '"Zero extended small Int64 constant."')
SdvmConstInt64ConstSection = sdvmConstantDef('SdvmConstInt64ConstSection', opcode = 0x0287, type = SdvmTypeInt64, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstUInt8 = sdvmConstantDef('SdvmConstUInt8', opcode = 0x0301, type = SdvmTypeUInt8, description = '"Int8 constant."')
SdvmConstUInt16 = sdvmConstantDef('SdvmConstUInt16', opcode = 0x0381, type = SdvmTypeUInt16, description = '"Int16 constant."')
SdvmConstUInt32 = sdvmConstantDef('SdvmConstUInt32', opcode = 0x0401, type = SdvmTypeUInt32, description = '"Int32 constant."')
SdvmConstUInt64SExt = sdvmConstantDef('SdvmConstUInt64SExt', opcode = 0x0481, type = SdvmTypeUInt64, description = '"Signed extended small Int64 constant."')
SdvmConstUInt64ZExt = sdvmConstantDef('SdvmConstUInt64ZExt', opcode = 0x0483, type = SdvmTypeUInt64, description = '"Zero extended small Int64 constant."')
SdvmConstUInt64ConstSection = sdvmConstantDef('SdvmConstUInt64ConstSection', opcode = 0x0487, type = SdvmTypeUInt64, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstPointerSExt = sdvmConstantDef('SdvmConstPointerSExt', opcode = 0x0501, type = SdvmTypePointer, description = '"Signed extended small pointer constant."')
SdvmConstPointerZExt = sdvmConstantDef('SdvmConstPointerZExt', opcode = 0x0503, type = SdvmTypePointer, description = '"Zero extended small pointer constant."')
SdvmConstPointerConstSection = sdvmConstantDef('SdvmConstPointerConstSection', opcode = 0x0507, type = SdvmTypePointer, description = '"Pointer literal encoded in const section at zero extended offset."')
SdvmConstPointerCString = sdvmConstantDef('SdvmConstPointerCString', opcode = 0x050B, type = SdvmTypePointer, description = '"Pointer into null terminated c string."')
SdvmConstPointerString = sdvmConstantDef('SdvmConstPointerString', opcode = 0x050D, type = SdvmTypePointer, description = '"Pointer into non-null terminated string."')
SdvmConstGCPointerSExt = sdvmConstantDef('SdvmConstGCPointerSExt', opcode = 0x0601, type = SdvmTypeGCPointer, description = '"Signed extended small gc pointer constant."')
SdvmConstGCPointerZExt = sdvmConstantDef('SdvmConstGCPointerZExt', opcode = 0x0603, type = SdvmTypeGCPointer, description = '"Zero extended small gc pointer constant."')
SdvmConstGCPointerConstSection = sdvmConstantDef('SdvmConstGCPointerConstSection', opcode = 0x0607, type = SdvmTypeGCPointer, description = '"GC Pointer literal encoded in const section at zero extended offset."')
SdvmConstGCPointerCString = sdvmConstantDef('SdvmConstGCPointerCString', opcode = 0x060B, type = SdvmTypeGCPointer, description = '"GC Pointer into null terminated c string."')
SdvmConstGCPointerString = sdvmConstantDef('SdvmConstGCPointerString', opcode = 0x060D, type = SdvmTypeGCPointer, description = '"GC Pointer into non-null terminated string."')
SdvmConstImportPointer = sdvmConstantDef('SdvmConstImportPointer', opcode = 0x0509, type = SdvmTypePointer, description = '"Pointer imported constant."')
SdvmConstImportProcedureHandle = sdvmConstantDef('SdvmConstImportProcedureHandle', opcode = 0x0589, type = SdvmTypeProcedureHandle, description = '"Procedure handle imported constant."')
SdvmConstFloat32 = sdvmConstantDef('SdvmConstFloat32', opcode = 0x0683, type = SdvmTypeFloat32, description = '"Float32 constant."')
SdvmConstFloat64Small = sdvmConstantDef('SdvmConstFloat64Small', opcode = 0x0705, type = SdvmTypeFloat64, description = '"Small float."')
SdvmConstFloat64ConstSection = sdvmConstantDef('SdvmConstFloat64ConstSection', opcode = 0x0707, type = SdvmTypeFloat64, description = '"Float64 in constant section."')
SdvmConstLabel = sdvmConstantDef('SdvmConstLabel', opcode = 0x0803, type = SdvmTypeLabel, description = '"Label constant."')
SdvmOpNop = sdvmOpcodeDef('SdvmOpNop', opcode = 0x0000, description = '"No operation"')
SdvmOpBeginArguments = sdvmOpcodeDef('SdvmOpBeginArguments', opcode = 0x0001, description = '"Begin fetching arguments"')
SdvmOpBeginCall = sdvmOpcodeDef('SdvmOpBeginCall', opcode = 0x0002, description = '"Begin call"')
SdvmOpBeginCaptures = sdvmOpcodeDef('SdvmOpBeginCaptures', opcode = 0x0003, description = '"Begin captures"')
SdvmOpArg = sdvmOpcodeDef('SdvmOpArg', opcode = 0x0004, description = '"Fetch argument"')
SdvmOpCallArg = sdvmOpcodeDef('SdvmOpCallArg', opcode = 0x0005, description = '"Pass call argument"')
SdvmOpCall = sdvmOpcodeDef('SdvmOpCall', opcode = 0x0006, description = '"Call procedure"')
SdvmOpLoad = sdvmOpcodeDef('SdvmOpLoad', opcode = 0x0007, description = '"Load value from memory"')
SdvmOpStore = sdvmOpcodeDef('SdvmOpStore', opcode = 0x0008, description = '"Store value from memory"')
SdvmOpReturn = sdvmOpcodeDef('SdvmOpReturn', opcode = 0x0009, description = '"Return value"')
SdvmOpJump = sdvmOpcodeDef('SdvmOpJump', opcode = 0x000A, description = '"Jump"')
SdvmOpJumpIfTrue = sdvmOpcodeDef('SdvmOpJumpIfTrue', opcode = 0x000B, description = '"Conditional branch if true"')
SdvmOpJumpIfFalse = sdvmOpcodeDef('SdvmOpJumpIfFalse', opcode = 0x000C, description = '"Conditional branch if false"')
SdvmOpPhi = sdvmOpcodeDef('SdvmOpPhi', opcode = 0x000D, description = '"Phi"')
SdvmOpMovePhi = sdvmOpcodeDef('SdvmOpMovePhi', opcode = 0x000E, description = '"Move into phi"')
SdvmOpAdd = sdvmOpcodeDef('SdvmOpAdd', opcode = 0x000F, description = '"Addition"')
SdvmOpSub = sdvmOpcodeDef('SdvmOpSub', opcode = 0x0010, description = '"Subtraction"')
SdvmOpMul = sdvmOpcodeDef('SdvmOpMul', opcode = 0x0011, description = '"Multiplication"')
SdvmOpDiv = sdvmOpcodeDef('SdvmOpDiv', opcode = 0x0012, description = '"Division"')
SdvmOpUDiv = sdvmOpcodeDef('SdvmOpUDiv', opcode = 0x0013, description = '"Unsigned division"')
SdvmOpRem = sdvmOpcodeDef('SdvmOpRem', opcode = 0x0014, description = '"Remainder"')
SdvmOpURem = sdvmOpcodeDef('SdvmOpURem', opcode = 0x0015, description = '"Unsigned remainder"')
SdvmOpSqrt = sdvmOpcodeDef('SdvmOpSqrt', opcode = 0x0016, description = '"Sqrt"')
SdvmOpAnd = sdvmOpcodeDef('SdvmOpAnd', opcode = 0x0017, description = '"Bitwise and"')
SdvmOpOr = sdvmOpcodeDef('SdvmOpOr', opcode = 0x0018, description = '"Bitwise or"')
SdvmOpXor = sdvmOpcodeDef('SdvmOpXor', opcode = 0x0019, description = '"Bitwise xor"')
SdvmOpLsl = sdvmOpcodeDef('SdvmOpLsl', opcode = 0x001A, description = '"Logical shift left"')
SdvmOpLsr = sdvmOpcodeDef('SdvmOpLsr', opcode = 0x001B, description = '"Logical shift right"')
SdvmOpAsr = sdvmOpcodeDef('SdvmOpAsr', opcode = 0x001C, description = '"Arithmetic shift right"')
SdvmOpEquals = sdvmOpcodeDef('SdvmOpEquals', opcode = 0x001D, description = '"Equals. Unordered if float."')
SdvmOpNotEquals = sdvmOpcodeDef('SdvmOpNotEquals', opcode = 0x001E, description = '"Not equals. Unordered if float."')
SdvmOpLessThan = sdvmOpcodeDef('SdvmOpLessThan', opcode = 0x001F, description = '"Less than. Unordered if float."')
SdvmOpLessOrEquals = sdvmOpcodeDef('SdvmOpLessOrEquals', opcode = 0x0020, description = '"Less or equals. Unordered if float."')
SdvmOpGreaterThan = sdvmOpcodeDef('SdvmOpGreaterThan', opcode = 0x0021, description = '"Less than. Unordered if float."')
SdvmOpGreaterOrEquals = sdvmOpcodeDef('SdvmOpGreaterOrEquals', opcode = 0x0022, description = '"Greater or equals. Unordered if float."')
SdvmInstNop = sdvmInstructionDef('SdvmInstNop', opcode = 0x0000, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'No operation')
SdvmInstBeginArguments = sdvmInstructionDef('SdvmInstBeginArguments', opcode = 0x7BC002, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin fetching arguments. Argument count. Calling convention.')
SdvmInstBeginCall = sdvmInstructionDef('SdvmInstBeginCall', opcode = 0x7BC004, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin call. Argument count. Calling convention index.')
SdvmInstBeginCaptures = sdvmInstructionDef('SdvmInstBeginCaptures', opcode = 0x3D806, type = SdvmTypeGCPointer, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeVoid, description = 'Begin captures.')
SdvmInstArgBoolean = sdvmInstructionDef('SdvmInstArgBoolean', opcode = 0x0208, type = SdvmTypeBoolean, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Boolean argument')
SdvmInstArgInt8 = sdvmInstructionDef('SdvmInstArgInt8', opcode = 0x0408, type = SdvmTypeInt8, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Int8 argument')
SdvmInstArgInt16 = sdvmInstructionDef('SdvmInstArgInt16', opcode = 0x0608, type = SdvmTypeInt16, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Int16 argument')
SdvmInstArgInt32 = sdvmInstructionDef('SdvmInstArgInt32', opcode = 0x0808, type = SdvmTypeInt32, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Int32 argument')
SdvmInstArgInt64 = sdvmInstructionDef('SdvmInstArgInt64', opcode = 0x0A08, type = SdvmTypeInt64, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Int64 argument')
SdvmInstArgUInt8 = sdvmInstructionDef('SdvmInstArgUInt8', opcode = 0x0C08, type = SdvmTypeUInt8, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch UInt8 argument')
SdvmInstArgUInt16 = sdvmInstructionDef('SdvmInstArgUInt16', opcode = 0x0E08, type = SdvmTypeUInt16, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch UInt16 argument')
SdvmInstArgUInt32 = sdvmInstructionDef('SdvmInstArgUInt32', opcode = 0x1008, type = SdvmTypeUInt32, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch UInt32 argument')
SdvmInstArgUInt64 = sdvmInstructionDef('SdvmInstArgUInt64', opcode = 0x1208, type = SdvmTypeUInt64, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch UInt64 argument')
SdvmInstArgPointer = sdvmInstructionDef('SdvmInstArgPointer', opcode = 0x1408, type = SdvmTypePointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Pointer argument')
SdvmInstArgProcedureHandle = sdvmInstructionDef('SdvmInstArgProcedureHandle', opcode = 0x1608, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch ProcedureHandle argument')
SdvmInstArgGCPointer = sdvmInstructionDef('SdvmInstArgGCPointer', opcode = 0x1808, type = SdvmTypeGCPointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch GCPointer argument')
SdvmInstArgFloat32 = sdvmInstructionDef('SdvmInstArgFloat32', opcode = 0x1A08, type = SdvmTypeFloat32, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Float32 argument')
SdvmInstArgFloat64 = sdvmInstructionDef('SdvmInstArgFloat64', opcode = 0x1C08, type = SdvmTypeFloat64, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch Float64 argument')
SdvmInstArgFloatVector128 = sdvmInstructionDef('SdvmInstArgFloatVector128', opcode = 0x2608, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch FloatVector128 argument')
SdvmInstArgIntegerVector128 = sdvmInstructionDef('SdvmInstArgIntegerVector128', opcode = 0x2808, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch IntegerVector128 argument')
SdvmInstArgFloatVector256 = sdvmInstructionDef('SdvmInstArgFloatVector256', opcode = 0x2A08, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch FloatVector256 argument')
SdvmInstArgIntegerVector256 = sdvmInstructionDef('SdvmInstArgIntegerVector256', opcode = 0x2C08, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch IntegerVector256 argument')
SdvmInstCallArgBoolean = sdvmInstructionDef('SdvmInstCallArgBoolean', opcode = 0x400A, type = SdvmTypeVoid, arg0Type = SdvmTypeBoolean, arg1Type = SdvmTypeVoid, description = 'Pass call Boolean argument')
SdvmInstCallArgInt8 = sdvmInstructionDef('SdvmInstCallArgInt8', opcode = 0x800A, type = SdvmTypeVoid, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeVoid, description = 'Pass call Int8 argument')
SdvmInstCallArgInt16 = sdvmInstructionDef('SdvmInstCallArgInt16', opcode = 0xC00A, type = SdvmTypeVoid, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeVoid, description = 'Pass call Int16 argument')
SdvmInstCallArgInt32 = sdvmInstructionDef('SdvmInstCallArgInt32', opcode = 0x1000A, type = SdvmTypeVoid, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeVoid, description = 'Pass call Int32 argument')
SdvmInstCallArgInt64 = sdvmInstructionDef('SdvmInstCallArgInt64', opcode = 0x1400A, type = SdvmTypeVoid, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeVoid, description = 'Pass call Int64 argument')
SdvmInstCallArgUInt8 = sdvmInstructionDef('SdvmInstCallArgUInt8', opcode = 0x1800A, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeVoid, description = 'Pass call UInt8 argument')
SdvmInstCallArgUInt16 = sdvmInstructionDef('SdvmInstCallArgUInt16', opcode = 0x1C00A, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeVoid, description = 'Pass call UInt16 argument')
SdvmInstCallArgUInt32 = sdvmInstructionDef('SdvmInstCallArgUInt32', opcode = 0x2000A, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeVoid, description = 'Pass call UInt32 argument')
SdvmInstCallArgUInt64 = sdvmInstructionDef('SdvmInstCallArgUInt64', opcode = 0x2400A, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeVoid, description = 'Pass call UInt64 argument')
SdvmInstCallArgPointer = sdvmInstructionDef('SdvmInstCallArgPointer', opcode = 0x2800A, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Pass call Pointer argument')
SdvmInstCallArgProcedureHandle = sdvmInstructionDef('SdvmInstCallArgProcedureHandle', opcode = 0x2C00A, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Pass call ProcedureHandle argument')
SdvmInstCallArgGCPointer = sdvmInstructionDef('SdvmInstCallArgGCPointer', opcode = 0x3000A, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Pass call GCPointer argument')
SdvmInstCallArgFloat32 = sdvmInstructionDef('SdvmInstCallArgFloat32', opcode = 0x3400A, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeVoid, description = 'Pass call Float32 argument')
SdvmInstCallArgFloat64 = sdvmInstructionDef('SdvmInstCallArgFloat64', opcode = 0x3800A, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeVoid, description = 'Pass call Float64 argument')
SdvmInstCallArgFloatVector128 = sdvmInstructionDef('SdvmInstCallArgFloatVector128', opcode = 0x4C00A, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector128, arg1Type = SdvmTypeVoid, description = 'Pass call FloatVector128 argument')
SdvmInstCallArgIntegerVector128 = sdvmInstructionDef('SdvmInstCallArgIntegerVector128', opcode = 0x5000A, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector128, arg1Type = SdvmTypeVoid, description = 'Pass call IntegerVector128 argument')
SdvmInstCallArgFloatVector256 = sdvmInstructionDef('SdvmInstCallArgFloatVector256', opcode = 0x5400A, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector256, arg1Type = SdvmTypeVoid, description = 'Pass call FloatVector256 argument')
SdvmInstCallArgIntegerVector256 = sdvmInstructionDef('SdvmInstCallArgIntegerVector256', opcode = 0x5800A, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector256, arg1Type = SdvmTypeVoid, description = 'Pass call IntegerVector256 argument')
SdvmInstCallVoid = sdvmInstructionDef('SdvmInstCallVoid', opcode = 0x2C00C, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Call void returning procedure')
SdvmInstCallBoolean = sdvmInstructionDef('SdvmInstCallBoolean', opcode = 0x7AC20C, type = SdvmTypeBoolean, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Boolean returning procedure')
SdvmInstCallInt8 = sdvmInstructionDef('SdvmInstCallInt8', opcode = 0x7AC40C, type = SdvmTypeInt8, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Int8 returning procedure')
SdvmInstCallInt16 = sdvmInstructionDef('SdvmInstCallInt16', opcode = 0x7AC60C, type = SdvmTypeInt16, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Int16 returning procedure')
SdvmInstCallInt32 = sdvmInstructionDef('SdvmInstCallInt32', opcode = 0x7AC80C, type = SdvmTypeInt32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Int32 returning procedure')
SdvmInstCallInt64 = sdvmInstructionDef('SdvmInstCallInt64', opcode = 0x7ACA0C, type = SdvmTypeInt64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Int64 returning procedure')
SdvmInstCallUInt8 = sdvmInstructionDef('SdvmInstCallUInt8', opcode = 0x7ACC0C, type = SdvmTypeUInt8, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call UInt8 returning procedure')
SdvmInstCallUInt16 = sdvmInstructionDef('SdvmInstCallUInt16', opcode = 0x7ACE0C, type = SdvmTypeUInt16, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call UInt16 returning procedure')
SdvmInstCallUInt32 = sdvmInstructionDef('SdvmInstCallUInt32', opcode = 0x7AD00C, type = SdvmTypeUInt32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call UInt32 returning procedure')
SdvmInstCallUInt64 = sdvmInstructionDef('SdvmInstCallUInt64', opcode = 0x7AD20C, type = SdvmTypeUInt64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call UInt64 returning procedure')
SdvmInstCallPointer = sdvmInstructionDef('SdvmInstCallPointer', opcode = 0x7AD40C, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Pointer returning procedure')
SdvmInstCallProcedureHandle = sdvmInstructionDef('SdvmInstCallProcedureHandle', opcode = 0x7AD60C, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call ProcedureHandle returning procedure')
SdvmInstCallGCPointer = sdvmInstructionDef('SdvmInstCallGCPointer', opcode = 0x7AD80C, type = SdvmTypeGCPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call GCPointer returning procedure')
SdvmInstCallFloat32 = sdvmInstructionDef('SdvmInstCallFloat32', opcode = 0x7ADA0C, type = SdvmTypeFloat32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Float32 returning procedure')
SdvmInstCallFloat64 = sdvmInstructionDef('SdvmInstCallFloat64', opcode = 0x7ADC0C, type = SdvmTypeFloat64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call Float64 returning procedure')
SdvmInstCallFloatVector128 = sdvmInstructionDef('SdvmInstCallFloatVector128', opcode = 0x7AE60C, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call FloatVector128 returning procedure')
SdvmInstCallIntegerVector128 = sdvmInstructionDef('SdvmInstCallIntegerVector128', opcode = 0x7AE80C, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call IntegerVector128 returning procedure')
SdvmInstCallFloatVector256 = sdvmInstructionDef('SdvmInstCallFloatVector256', opcode = 0x7AEA0C, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call FloatVector256 returning procedure')
SdvmInstCallIntegerVector256 = sdvmInstructionDef('SdvmInstCallIntegerVector256', opcode = 0x7AEC0C, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call IntegerVector256 returning procedure')
SdvmInstCallClosureVoid = sdvmInstructionDef('SdvmInstCallClosureVoid', opcode = 0x3000C, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Call void returning procedure')
SdvmInstCallClosureBoolean = sdvmInstructionDef('SdvmInstCallClosureBoolean', opcode = 0x7B020C, type = SdvmTypeBoolean, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Boolean returning closure')
SdvmInstCallClosureInt8 = sdvmInstructionDef('SdvmInstCallClosureInt8', opcode = 0x7B040C, type = SdvmTypeInt8, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Int8 returning closure')
SdvmInstCallClosureInt16 = sdvmInstructionDef('SdvmInstCallClosureInt16', opcode = 0x7B060C, type = SdvmTypeInt16, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Int16 returning closure')
SdvmInstCallClosureInt32 = sdvmInstructionDef('SdvmInstCallClosureInt32', opcode = 0x7B080C, type = SdvmTypeInt32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Int32 returning closure')
SdvmInstCallClosureInt64 = sdvmInstructionDef('SdvmInstCallClosureInt64', opcode = 0x7B0A0C, type = SdvmTypeInt64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Int64 returning closure')
SdvmInstCallClosureUInt8 = sdvmInstructionDef('SdvmInstCallClosureUInt8', opcode = 0x7B0C0C, type = SdvmTypeUInt8, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call UInt8 returning closure')
SdvmInstCallClosureUInt16 = sdvmInstructionDef('SdvmInstCallClosureUInt16', opcode = 0x7B0E0C, type = SdvmTypeUInt16, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call UInt16 returning closure')
SdvmInstCallClosureUInt32 = sdvmInstructionDef('SdvmInstCallClosureUInt32', opcode = 0x7B100C, type = SdvmTypeUInt32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call UInt32 returning closure')
SdvmInstCallClosureUInt64 = sdvmInstructionDef('SdvmInstCallClosureUInt64', opcode = 0x7B120C, type = SdvmTypeUInt64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call UInt64 returning closure')
SdvmInstCallClosurePointer = sdvmInstructionDef('SdvmInstCallClosurePointer', opcode = 0x7B140C, type = SdvmTypePointer, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Pointer returning closure')
SdvmInstCallClosureProcedureHandle = sdvmInstructionDef('SdvmInstCallClosureProcedureHandle', opcode = 0x7B160C, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call ProcedureHandle returning closure')
SdvmInstCallClosureGCPointer = sdvmInstructionDef('SdvmInstCallClosureGCPointer', opcode = 0x7B180C, type = SdvmTypeGCPointer, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call GCPointer returning closure')
SdvmInstCallClosureFloat32 = sdvmInstructionDef('SdvmInstCallClosureFloat32', opcode = 0x7B1A0C, type = SdvmTypeFloat32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Float32 returning closure')
SdvmInstCallClosureFloat64 = sdvmInstructionDef('SdvmInstCallClosureFloat64', opcode = 0x7B1C0C, type = SdvmTypeFloat64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call Float64 returning closure')
SdvmInstCallClosureFloatVector128 = sdvmInstructionDef('SdvmInstCallClosureFloatVector128', opcode = 0x7B260C, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call FloatVector128 returning closure')
SdvmInstCallClosureIntegerVector128 = sdvmInstructionDef('SdvmInstCallClosureIntegerVector128', opcode = 0x7B280C, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call IntegerVector128 returning closure')
SdvmInstCallClosureFloatVector256 = sdvmInstructionDef('SdvmInstCallClosureFloatVector256', opcode = 0x7B2A0C, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call FloatVector256 returning closure')
SdvmInstCallClosureIntegerVector256 = sdvmInstructionDef('SdvmInstCallClosureIntegerVector256', opcode = 0x7B2C0C, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInfo, description = 'Call IntegerVector256 returning closure')
SdvmInstReturnVoid = sdvmInstructionDef('SdvmInstReturnVoid', opcode = 0x0012, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnBoolean = sdvmInstructionDef('SdvmInstReturnBoolean', opcode = 0x4012, type = SdvmTypeVoid, arg0Type = SdvmTypeBoolean, arg1Type = SdvmTypeVoid, description = 'Return Boolean')
SdvmInstReturnInt8 = sdvmInstructionDef('SdvmInstReturnInt8', opcode = 0x8012, type = SdvmTypeVoid, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeVoid, description = 'Return Int8')
SdvmInstReturnInt16 = sdvmInstructionDef('SdvmInstReturnInt16', opcode = 0xC012, type = SdvmTypeVoid, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeVoid, description = 'Return Int16')
SdvmInstReturnInt32 = sdvmInstructionDef('SdvmInstReturnInt32', opcode = 0x10012, type = SdvmTypeVoid, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeVoid, description = 'Return Int32')
SdvmInstReturnInt64 = sdvmInstructionDef('SdvmInstReturnInt64', opcode = 0x14012, type = SdvmTypeVoid, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeVoid, description = 'Return Int64')
SdvmInstReturnUInt8 = sdvmInstructionDef('SdvmInstReturnUInt8', opcode = 0x18012, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeVoid, description = 'Return UInt8')
SdvmInstReturnUInt16 = sdvmInstructionDef('SdvmInstReturnUInt16', opcode = 0x1C012, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeVoid, description = 'Return UInt16')
SdvmInstReturnUInt32 = sdvmInstructionDef('SdvmInstReturnUInt32', opcode = 0x20012, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeVoid, description = 'Return UInt32')
SdvmInstReturnUInt64 = sdvmInstructionDef('SdvmInstReturnUInt64', opcode = 0x24012, type = SdvmTypeVoid, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeVoid, description = 'Return UInt64')
SdvmInstReturnPointer = sdvmInstructionDef('SdvmInstReturnPointer', opcode = 0x28012, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Return Pointer')
SdvmInstReturnProcedureHandle = sdvmInstructionDef('SdvmInstReturnProcedureHandle', opcode = 0x2C012, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Return ProcedureHandle')
SdvmInstReturnGCPointer = sdvmInstructionDef('SdvmInstReturnGCPointer', opcode = 0x30012, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Return GCPointer')
SdvmInstReturnFloat32 = sdvmInstructionDef('SdvmInstReturnFloat32', opcode = 0x34012, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeVoid, description = 'Return Float32')
SdvmInstReturnFloat64 = sdvmInstructionDef('SdvmInstReturnFloat64', opcode = 0x38012, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeVoid, description = 'Return Float64')
SdvmInstReturnFloatVector128 = sdvmInstructionDef('SdvmInstReturnFloatVector128', opcode = 0x4C012, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector128, arg1Type = SdvmTypeVoid, description = 'Return FloatVector128')
SdvmInstReturnIntegerVector128 = sdvmInstructionDef('SdvmInstReturnIntegerVector128', opcode = 0x50012, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector128, arg1Type = SdvmTypeVoid, description = 'Return IntegerVector128')
SdvmInstReturnFloatVector256 = sdvmInstructionDef('SdvmInstReturnFloatVector256', opcode = 0x54012, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector256, arg1Type = SdvmTypeVoid, description = 'Return FloatVector256')
SdvmInstReturnIntegerVector256 = sdvmInstructionDef('SdvmInstReturnIntegerVector256', opcode = 0x58012, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector256, arg1Type = SdvmTypeVoid, description = 'Return IntegerVector256')
SdvmInstLoadBoolean = sdvmInstructionDef('SdvmInstLoadBoolean', opcode = 0x2820E, type = SdvmTypeBoolean, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Boolean value from memory')
SdvmInstLoadInt8 = sdvmInstructionDef('SdvmInstLoadInt8', opcode = 0x2840E, type = SdvmTypeInt8, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Int8 value from memory')
SdvmInstLoadInt16 = sdvmInstructionDef('SdvmInstLoadInt16', opcode = 0x2860E, type = SdvmTypeInt16, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Int16 value from memory')
SdvmInstLoadInt32 = sdvmInstructionDef('SdvmInstLoadInt32', opcode = 0x2880E, type = SdvmTypeInt32, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Int32 value from memory')
SdvmInstLoadInt64 = sdvmInstructionDef('SdvmInstLoadInt64', opcode = 0x28A0E, type = SdvmTypeInt64, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Int64 value from memory')
SdvmInstLoadUInt8 = sdvmInstructionDef('SdvmInstLoadUInt8', opcode = 0x28C0E, type = SdvmTypeUInt8, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load UInt8 value from memory')
SdvmInstLoadUInt16 = sdvmInstructionDef('SdvmInstLoadUInt16', opcode = 0x28E0E, type = SdvmTypeUInt16, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load UInt16 value from memory')
SdvmInstLoadUInt32 = sdvmInstructionDef('SdvmInstLoadUInt32', opcode = 0x2900E, type = SdvmTypeUInt32, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load UInt32 value from memory')
SdvmInstLoadUInt64 = sdvmInstructionDef('SdvmInstLoadUInt64', opcode = 0x2920E, type = SdvmTypeUInt64, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load UInt64 value from memory')
SdvmInstLoadPointer = sdvmInstructionDef('SdvmInstLoadPointer', opcode = 0x2940E, type = SdvmTypePointer, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Pointer value from memory')
SdvmInstLoadProcedureHandle = sdvmInstructionDef('SdvmInstLoadProcedureHandle', opcode = 0x2960E, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load ProcedureHandle value from memory')
SdvmInstLoadGCPointer = sdvmInstructionDef('SdvmInstLoadGCPointer', opcode = 0x2980E, type = SdvmTypeGCPointer, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load GCPointer value from memory')
SdvmInstLoadFloat32 = sdvmInstructionDef('SdvmInstLoadFloat32', opcode = 0x29A0E, type = SdvmTypeFloat32, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Float32 value from memory')
SdvmInstLoadFloat64 = sdvmInstructionDef('SdvmInstLoadFloat64', opcode = 0x29C0E, type = SdvmTypeFloat64, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load Float64 value from memory')
SdvmInstLoadFloatVector128 = sdvmInstructionDef('SdvmInstLoadFloatVector128', opcode = 0x2A60E, type = SdvmTypeFloatVector128, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load FloatVector128 value from memory')
SdvmInstLoadIntegerVector128 = sdvmInstructionDef('SdvmInstLoadIntegerVector128', opcode = 0x2A80E, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load IntegerVector128 value from memory')
SdvmInstLoadFloatVector256 = sdvmInstructionDef('SdvmInstLoadFloatVector256', opcode = 0x2AA0E, type = SdvmTypeFloatVector256, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load FloatVector256 value from memory')
SdvmInstLoadIntegerVector256 = sdvmInstructionDef('SdvmInstLoadIntegerVector256', opcode = 0x2AC0E, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Load IntegerVector256 value from memory')
SdvmInstStoreBoolean = sdvmInstructionDef('SdvmInstStoreBoolean', opcode = 0xA8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeBoolean, description = 'Store Boolean value into memory')
SdvmInstStoreInt8 = sdvmInstructionDef('SdvmInstStoreInt8', opcode = 0x128010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeInt8, description = 'Store Int8 value into memory')
SdvmInstStoreInt16 = sdvmInstructionDef('SdvmInstStoreInt16', opcode = 0x1A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeInt16, description = 'Store Int16 value into memory')
SdvmInstStoreInt32 = sdvmInstructionDef('SdvmInstStoreInt32', opcode = 0x228010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeInt32, description = 'Store Int32 value into memory')
SdvmInstStoreInt64 = sdvmInstructionDef('SdvmInstStoreInt64', opcode = 0x2A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeInt64, description = 'Store Int64 value into memory')
SdvmInstStoreUInt8 = sdvmInstructionDef('SdvmInstStoreUInt8', opcode = 0x328010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeUInt8, description = 'Store UInt8 value into memory')
SdvmInstStoreUInt16 = sdvmInstructionDef('SdvmInstStoreUInt16', opcode = 0x3A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeUInt16, description = 'Store UInt16 value into memory')
SdvmInstStoreUInt32 = sdvmInstructionDef('SdvmInstStoreUInt32', opcode = 0x428010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeUInt32, description = 'Store UInt32 value into memory')
SdvmInstStoreUInt64 = sdvmInstructionDef('SdvmInstStoreUInt64', opcode = 0x4A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeUInt64, description = 'Store UInt64 value into memory')
SdvmInstStorePointer = sdvmInstructionDef('SdvmInstStorePointer', opcode = 0x528010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypePointer, description = 'Store Pointer value into memory')
SdvmInstStoreProcedureHandle = sdvmInstructionDef('SdvmInstStoreProcedureHandle', opcode = 0x5A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeProcedureHandle, description = 'Store ProcedureHandle value into memory')
SdvmInstStoreGCPointer = sdvmInstructionDef('SdvmInstStoreGCPointer', opcode = 0x628010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeGCPointer, description = 'Store GCPointer value into memory')
SdvmInstStoreFloat32 = sdvmInstructionDef('SdvmInstStoreFloat32', opcode = 0x6A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeFloat32, description = 'Store Float32 value into memory')
SdvmInstStoreFloat64 = sdvmInstructionDef('SdvmInstStoreFloat64', opcode = 0x728010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeFloat64, description = 'Store Float64 value into memory')
SdvmInstStoreFloatVector128 = sdvmInstructionDef('SdvmInstStoreFloatVector128', opcode = 0x9A8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeFloatVector128, description = 'Store FloatVector128 value into memory')
SdvmInstStoreIntegerVector128 = sdvmInstructionDef('SdvmInstStoreIntegerVector128', opcode = 0xA28010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeIntegerVector128, description = 'Store IntegerVector128 value into memory')
SdvmInstStoreFloatVector256 = sdvmInstructionDef('SdvmInstStoreFloatVector256', opcode = 0xAA8010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeFloatVector256, description = 'Store FloatVector256 value into memory')
SdvmInstStoreIntegerVector256 = sdvmInstructionDef('SdvmInstStoreIntegerVector256', opcode = 0xB28010, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeIntegerVector256, description = 'Store IntegerVector256 value into memory')
SdvmInstLoadGC_Boolean = sdvmInstructionDef('SdvmInstLoadGC_Boolean', opcode = 0x3020E, type = SdvmTypeBoolean, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Boolean value from memory')
SdvmInstLoadGC_Int8 = sdvmInstructionDef('SdvmInstLoadGC_Int8', opcode = 0x3040E, type = SdvmTypeInt8, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Int8 value from memory')
SdvmInstLoadGC_Int16 = sdvmInstructionDef('SdvmInstLoadGC_Int16', opcode = 0x3060E, type = SdvmTypeInt16, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Int16 value from memory')
SdvmInstLoadGC_Int32 = sdvmInstructionDef('SdvmInstLoadGC_Int32', opcode = 0x3080E, type = SdvmTypeInt32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Int32 value from memory')
SdvmInstLoadGC_Int64 = sdvmInstructionDef('SdvmInstLoadGC_Int64', opcode = 0x30A0E, type = SdvmTypeInt64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Int64 value from memory')
SdvmInstLoadGC_UInt8 = sdvmInstructionDef('SdvmInstLoadGC_UInt8', opcode = 0x30C0E, type = SdvmTypeUInt8, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load UInt8 value from memory')
SdvmInstLoadGC_UInt16 = sdvmInstructionDef('SdvmInstLoadGC_UInt16', opcode = 0x30E0E, type = SdvmTypeUInt16, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load UInt16 value from memory')
SdvmInstLoadGC_UInt32 = sdvmInstructionDef('SdvmInstLoadGC_UInt32', opcode = 0x3100E, type = SdvmTypeUInt32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load UInt32 value from memory')
SdvmInstLoadGC_UInt64 = sdvmInstructionDef('SdvmInstLoadGC_UInt64', opcode = 0x3120E, type = SdvmTypeUInt64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load UInt64 value from memory')
SdvmInstLoadGC_Pointer = sdvmInstructionDef('SdvmInstLoadGC_Pointer', opcode = 0x3140E, type = SdvmTypePointer, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Pointer value from memory')
SdvmInstLoadGC_ProcedureHandle = sdvmInstructionDef('SdvmInstLoadGC_ProcedureHandle', opcode = 0x3160E, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load ProcedureHandle value from memory')
SdvmInstLoadGC_GCPointer = sdvmInstructionDef('SdvmInstLoadGC_GCPointer', opcode = 0x3180E, type = SdvmTypeGCPointer, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load GCPointer value from memory')
SdvmInstLoadGC_Float32 = sdvmInstructionDef('SdvmInstLoadGC_Float32', opcode = 0x31A0E, type = SdvmTypeFloat32, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Float32 value from memory')
SdvmInstLoadGC_Float64 = sdvmInstructionDef('SdvmInstLoadGC_Float64', opcode = 0x31C0E, type = SdvmTypeFloat64, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load Float64 value from memory')
SdvmInstLoadGC_FloatVector128 = sdvmInstructionDef('SdvmInstLoadGC_FloatVector128', opcode = 0x3260E, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load FloatVector128 value from memory')
SdvmInstLoadGC_IntegerVector128 = sdvmInstructionDef('SdvmInstLoadGC_IntegerVector128', opcode = 0x3280E, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load IntegerVector128 value from memory')
SdvmInstLoadGC_FloatVector256 = sdvmInstructionDef('SdvmInstLoadGC_FloatVector256', opcode = 0x32A0E, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load FloatVector256 value from memory')
SdvmInstLoadGC_IntegerVector256 = sdvmInstructionDef('SdvmInstLoadGC_IntegerVector256', opcode = 0x32C0E, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Load IntegerVector256 value from memory')
SdvmInstStoreGC_Boolean = sdvmInstructionDef('SdvmInstStoreGC_Boolean', opcode = 0xB0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeBoolean, description = 'Store Boolean value into memory')
SdvmInstStoreGC_Int8 = sdvmInstructionDef('SdvmInstStoreGC_Int8', opcode = 0x130010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInt8, description = 'Store Int8 value into memory')
SdvmInstStoreGC_Int16 = sdvmInstructionDef('SdvmInstStoreGC_Int16', opcode = 0x1B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInt16, description = 'Store Int16 value into memory')
SdvmInstStoreGC_Int32 = sdvmInstructionDef('SdvmInstStoreGC_Int32', opcode = 0x230010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInt32, description = 'Store Int32 value into memory')
SdvmInstStoreGC_Int64 = sdvmInstructionDef('SdvmInstStoreGC_Int64', opcode = 0x2B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeInt64, description = 'Store Int64 value into memory')
SdvmInstStoreGC_UInt8 = sdvmInstructionDef('SdvmInstStoreGC_UInt8', opcode = 0x330010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeUInt8, description = 'Store UInt8 value into memory')
SdvmInstStoreGC_UInt16 = sdvmInstructionDef('SdvmInstStoreGC_UInt16', opcode = 0x3B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeUInt16, description = 'Store UInt16 value into memory')
SdvmInstStoreGC_UInt32 = sdvmInstructionDef('SdvmInstStoreGC_UInt32', opcode = 0x430010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeUInt32, description = 'Store UInt32 value into memory')
SdvmInstStoreGC_UInt64 = sdvmInstructionDef('SdvmInstStoreGC_UInt64', opcode = 0x4B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeUInt64, description = 'Store UInt64 value into memory')
SdvmInstStoreGC_Pointer = sdvmInstructionDef('SdvmInstStoreGC_Pointer', opcode = 0x530010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypePointer, description = 'Store Pointer value into memory')
SdvmInstStoreGC_ProcedureHandle = sdvmInstructionDef('SdvmInstStoreGC_ProcedureHandle', opcode = 0x5B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeProcedureHandle, description = 'Store ProcedureHandle value into memory')
SdvmInstStoreGC_GCPointer = sdvmInstructionDef('SdvmInstStoreGC_GCPointer', opcode = 0x630010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeGCPointer, description = 'Store GCPointer value into memory')
SdvmInstStoreGC_Float32 = sdvmInstructionDef('SdvmInstStoreGC_Float32', opcode = 0x6B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeFloat32, description = 'Store Float32 value into memory')
SdvmInstStoreGC_Float64 = sdvmInstructionDef('SdvmInstStoreGC_Float64', opcode = 0x730010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeFloat64, description = 'Store Float64 value into memory')
SdvmInstStoreGC_FloatVector128 = sdvmInstructionDef('SdvmInstStoreGC_FloatVector128', opcode = 0x9B0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeFloatVector128, description = 'Store FloatVector128 value into memory')
SdvmInstStoreGC_IntegerVector128 = sdvmInstructionDef('SdvmInstStoreGC_IntegerVector128', opcode = 0xA30010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeIntegerVector128, description = 'Store IntegerVector128 value into memory')
SdvmInstStoreGC_FloatVector256 = sdvmInstructionDef('SdvmInstStoreGC_FloatVector256', opcode = 0xAB0010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeFloatVector256, description = 'Store FloatVector256 value into memory')
SdvmInstStoreGC_IntegerVector256 = sdvmInstructionDef('SdvmInstStoreGC_IntegerVector256', opcode = 0xB30010, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeIntegerVector256, description = 'Store IntegerVector256 value into memory')
SdvmInstJump = sdvmInstructionDef('SdvmInstJump', opcode = 0x40014, type = SdvmTypeVoid, arg0Type = SdvmTypeLabel, arg1Type = SdvmTypeVoid, description = 'Unconditional jump')
SdvmInstJumpIfTrue = sdvmInstructionDef('SdvmInstJumpIfTrue', opcode = 0x804016, type = SdvmTypeVoid, arg0Type = SdvmTypeBoolean, arg1Type = SdvmTypeLabel, description = 'Jump if true')
SdvmInstJumpIfFalse = sdvmInstructionDef('SdvmInstJumpIfFalse', opcode = 0x804018, type = SdvmTypeVoid, arg0Type = SdvmTypeBoolean, arg1Type = SdvmTypeLabel, description = 'Jump if false')
SdvmInstInt8Add = sdvmInstructionDef('SdvmInstInt8Add', opcode = 0x10841E, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Add')
SdvmInstInt8Sub = sdvmInstructionDef('SdvmInstInt8Sub', opcode = 0x108420, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Sub')
SdvmInstInt8Mul = sdvmInstructionDef('SdvmInstInt8Mul', opcode = 0x108422, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Mul')
SdvmInstInt8Div = sdvmInstructionDef('SdvmInstInt8Div', opcode = 0x108424, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Div')
SdvmInstInt8UDiv = sdvmInstructionDef('SdvmInstInt8UDiv', opcode = 0x108426, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 UDiv')
SdvmInstInt8Rem = sdvmInstructionDef('SdvmInstInt8Rem', opcode = 0x108428, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Rem')
SdvmInstInt8URem = sdvmInstructionDef('SdvmInstInt8URem', opcode = 0x10842A, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 URem')
SdvmInstInt8And = sdvmInstructionDef('SdvmInstInt8And', opcode = 0x10842E, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 And')
SdvmInstInt8Or = sdvmInstructionDef('SdvmInstInt8Or', opcode = 0x108430, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Or')
SdvmInstInt8Xor = sdvmInstructionDef('SdvmInstInt8Xor', opcode = 0x108432, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Xor')
SdvmInstInt8Lsl = sdvmInstructionDef('SdvmInstInt8Lsl', opcode = 0x108434, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Lsl')
SdvmInstInt8Lsr = sdvmInstructionDef('SdvmInstInt8Lsr', opcode = 0x108436, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Lsr')
SdvmInstInt8Asr = sdvmInstructionDef('SdvmInstInt8Asr', opcode = 0x108438, type = SdvmTypeInt8, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Asr')
SdvmInstInt8Equals = sdvmInstructionDef('SdvmInstInt8Equals', opcode = 0x10823A, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 Equals')
SdvmInstInt8NotEquals = sdvmInstructionDef('SdvmInstInt8NotEquals', opcode = 0x10823C, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 NotEquals')
SdvmInstInt8LessThan = sdvmInstructionDef('SdvmInstInt8LessThan', opcode = 0x10823E, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 LessThan')
SdvmInstInt8LessOrEquals = sdvmInstructionDef('SdvmInstInt8LessOrEquals', opcode = 0x108240, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 LessOrEquals')
SdvmInstInt8GreaterThan = sdvmInstructionDef('SdvmInstInt8GreaterThan', opcode = 0x108242, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 GreaterThan')
SdvmInstInt8GreaterOrEquals = sdvmInstructionDef('SdvmInstInt8GreaterOrEquals', opcode = 0x108244, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeInt8, description = 'Int8 GreaterOrEquals')
SdvmInstInt16Add = sdvmInstructionDef('SdvmInstInt16Add', opcode = 0x18C61E, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Add')
SdvmInstInt16Sub = sdvmInstructionDef('SdvmInstInt16Sub', opcode = 0x18C620, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Sub')
SdvmInstInt16Mul = sdvmInstructionDef('SdvmInstInt16Mul', opcode = 0x18C622, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Mul')
SdvmInstInt16Div = sdvmInstructionDef('SdvmInstInt16Div', opcode = 0x18C624, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Div')
SdvmInstInt16UDiv = sdvmInstructionDef('SdvmInstInt16UDiv', opcode = 0x18C626, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 UDiv')
SdvmInstInt16Rem = sdvmInstructionDef('SdvmInstInt16Rem', opcode = 0x18C628, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Rem')
SdvmInstInt16URem = sdvmInstructionDef('SdvmInstInt16URem', opcode = 0x18C62A, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 URem')
SdvmInstInt16And = sdvmInstructionDef('SdvmInstInt16And', opcode = 0x18C62E, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 And')
SdvmInstInt16Or = sdvmInstructionDef('SdvmInstInt16Or', opcode = 0x18C630, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Or')
SdvmInstInt16Xor = sdvmInstructionDef('SdvmInstInt16Xor', opcode = 0x18C632, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Xor')
SdvmInstInt16Lsl = sdvmInstructionDef('SdvmInstInt16Lsl', opcode = 0x18C634, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Lsl')
SdvmInstInt16Lsr = sdvmInstructionDef('SdvmInstInt16Lsr', opcode = 0x18C636, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Lsr')
SdvmInstInt16Asr = sdvmInstructionDef('SdvmInstInt16Asr', opcode = 0x18C638, type = SdvmTypeInt16, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Asr')
SdvmInstInt16Equals = sdvmInstructionDef('SdvmInstInt16Equals', opcode = 0x18C23A, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 Equals')
SdvmInstInt16NotEquals = sdvmInstructionDef('SdvmInstInt16NotEquals', opcode = 0x18C23C, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 NotEquals')
SdvmInstInt16LessThan = sdvmInstructionDef('SdvmInstInt16LessThan', opcode = 0x18C23E, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 LessThan')
SdvmInstInt16LessOrEquals = sdvmInstructionDef('SdvmInstInt16LessOrEquals', opcode = 0x18C240, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 LessOrEquals')
SdvmInstInt16GreaterThan = sdvmInstructionDef('SdvmInstInt16GreaterThan', opcode = 0x18C242, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 GreaterThan')
SdvmInstInt16GreaterOrEquals = sdvmInstructionDef('SdvmInstInt16GreaterOrEquals', opcode = 0x18C244, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeInt16, description = 'Int16 GreaterOrEquals')
SdvmInstInt32Add = sdvmInstructionDef('SdvmInstInt32Add', opcode = 0x21081E, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Add')
SdvmInstInt32Sub = sdvmInstructionDef('SdvmInstInt32Sub', opcode = 0x210820, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Sub')
SdvmInstInt32Mul = sdvmInstructionDef('SdvmInstInt32Mul', opcode = 0x210822, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Mul')
SdvmInstInt32Div = sdvmInstructionDef('SdvmInstInt32Div', opcode = 0x210824, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Div')
SdvmInstInt32UDiv = sdvmInstructionDef('SdvmInstInt32UDiv', opcode = 0x210826, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 UDiv')
SdvmInstInt32Rem = sdvmInstructionDef('SdvmInstInt32Rem', opcode = 0x210828, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Rem')
SdvmInstInt32URem = sdvmInstructionDef('SdvmInstInt32URem', opcode = 0x21082A, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 URem')
SdvmInstInt32And = sdvmInstructionDef('SdvmInstInt32And', opcode = 0x21082E, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 And')
SdvmInstInt32Or = sdvmInstructionDef('SdvmInstInt32Or', opcode = 0x210830, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Or')
SdvmInstInt32Xor = sdvmInstructionDef('SdvmInstInt32Xor', opcode = 0x210832, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Xor')
SdvmInstInt32Lsl = sdvmInstructionDef('SdvmInstInt32Lsl', opcode = 0x210834, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Lsl')
SdvmInstInt32Lsr = sdvmInstructionDef('SdvmInstInt32Lsr', opcode = 0x210836, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Lsr')
SdvmInstInt32Asr = sdvmInstructionDef('SdvmInstInt32Asr', opcode = 0x210838, type = SdvmTypeInt32, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Asr')
SdvmInstInt32Equals = sdvmInstructionDef('SdvmInstInt32Equals', opcode = 0x21023A, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 Equals')
SdvmInstInt32NotEquals = sdvmInstructionDef('SdvmInstInt32NotEquals', opcode = 0x21023C, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 NotEquals')
SdvmInstInt32LessThan = sdvmInstructionDef('SdvmInstInt32LessThan', opcode = 0x21023E, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 LessThan')
SdvmInstInt32LessOrEquals = sdvmInstructionDef('SdvmInstInt32LessOrEquals', opcode = 0x210240, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 LessOrEquals')
SdvmInstInt32GreaterThan = sdvmInstructionDef('SdvmInstInt32GreaterThan', opcode = 0x210242, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 GreaterThan')
SdvmInstInt32GreaterOrEquals = sdvmInstructionDef('SdvmInstInt32GreaterOrEquals', opcode = 0x210244, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeInt32, description = 'Int32 GreaterOrEquals')
SdvmInstInt64Add = sdvmInstructionDef('SdvmInstInt64Add', opcode = 0x294A1E, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Add')
SdvmInstInt64Sub = sdvmInstructionDef('SdvmInstInt64Sub', opcode = 0x294A20, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Sub')
SdvmInstInt64Mul = sdvmInstructionDef('SdvmInstInt64Mul', opcode = 0x294A22, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Mul')
SdvmInstInt64Div = sdvmInstructionDef('SdvmInstInt64Div', opcode = 0x294A24, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Div')
SdvmInstInt64UDiv = sdvmInstructionDef('SdvmInstInt64UDiv', opcode = 0x294A26, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 UDiv')
SdvmInstInt64Rem = sdvmInstructionDef('SdvmInstInt64Rem', opcode = 0x294A28, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Rem')
SdvmInstInt64URem = sdvmInstructionDef('SdvmInstInt64URem', opcode = 0x294A2A, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 URem')
SdvmInstInt64And = sdvmInstructionDef('SdvmInstInt64And', opcode = 0x294A2E, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 And')
SdvmInstInt64Or = sdvmInstructionDef('SdvmInstInt64Or', opcode = 0x294A30, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Or')
SdvmInstInt64Xor = sdvmInstructionDef('SdvmInstInt64Xor', opcode = 0x294A32, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Xor')
SdvmInstInt64Lsl = sdvmInstructionDef('SdvmInstInt64Lsl', opcode = 0x294A34, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Lsl')
SdvmInstInt64Lsr = sdvmInstructionDef('SdvmInstInt64Lsr', opcode = 0x294A36, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Lsr')
SdvmInstInt64Asr = sdvmInstructionDef('SdvmInstInt64Asr', opcode = 0x294A38, type = SdvmTypeInt64, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Asr')
SdvmInstInt64Equals = sdvmInstructionDef('SdvmInstInt64Equals', opcode = 0x29423A, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 Equals')
SdvmInstInt64NotEquals = sdvmInstructionDef('SdvmInstInt64NotEquals', opcode = 0x29423C, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 NotEquals')
SdvmInstInt64LessThan = sdvmInstructionDef('SdvmInstInt64LessThan', opcode = 0x29423E, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 LessThan')
SdvmInstInt64LessOrEquals = sdvmInstructionDef('SdvmInstInt64LessOrEquals', opcode = 0x294240, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 LessOrEquals')
SdvmInstInt64GreaterThan = sdvmInstructionDef('SdvmInstInt64GreaterThan', opcode = 0x294242, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 GreaterThan')
SdvmInstInt64GreaterOrEquals = sdvmInstructionDef('SdvmInstInt64GreaterOrEquals', opcode = 0x294244, type = SdvmTypeBoolean, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeInt64, description = 'Int64 GreaterOrEquals')
SdvmInstUInt8Add = sdvmInstructionDef('SdvmInstUInt8Add', opcode = 0x318C1E, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Add')
SdvmInstUInt8Sub = sdvmInstructionDef('SdvmInstUInt8Sub', opcode = 0x318C20, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Sub')
SdvmInstUInt8Mul = sdvmInstructionDef('SdvmInstUInt8Mul', opcode = 0x318C22, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Mul')
SdvmInstUInt8Div = sdvmInstructionDef('SdvmInstUInt8Div', opcode = 0x318C24, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Div')
SdvmInstUInt8UDiv = sdvmInstructionDef('SdvmInstUInt8UDiv', opcode = 0x318C26, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 UDiv')
SdvmInstUInt8Rem = sdvmInstructionDef('SdvmInstUInt8Rem', opcode = 0x318C28, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Rem')
SdvmInstUInt8URem = sdvmInstructionDef('SdvmInstUInt8URem', opcode = 0x318C2A, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 URem')
SdvmInstUInt8And = sdvmInstructionDef('SdvmInstUInt8And', opcode = 0x318C2E, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 And')
SdvmInstUInt8Or = sdvmInstructionDef('SdvmInstUInt8Or', opcode = 0x318C30, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Or')
SdvmInstUInt8Xor = sdvmInstructionDef('SdvmInstUInt8Xor', opcode = 0x318C32, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Xor')
SdvmInstUInt8Lsl = sdvmInstructionDef('SdvmInstUInt8Lsl', opcode = 0x318C34, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Lsl')
SdvmInstUInt8Lsr = sdvmInstructionDef('SdvmInstUInt8Lsr', opcode = 0x318C36, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Lsr')
SdvmInstUInt8Asr = sdvmInstructionDef('SdvmInstUInt8Asr', opcode = 0x318C38, type = SdvmTypeUInt8, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Asr')
SdvmInstUInt8Equals = sdvmInstructionDef('SdvmInstUInt8Equals', opcode = 0x31823A, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 Equals')
SdvmInstUInt8NotEquals = sdvmInstructionDef('SdvmInstUInt8NotEquals', opcode = 0x31823C, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 NotEquals')
SdvmInstUInt8LessThan = sdvmInstructionDef('SdvmInstUInt8LessThan', opcode = 0x31823E, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 LessThan')
SdvmInstUInt8LessOrEquals = sdvmInstructionDef('SdvmInstUInt8LessOrEquals', opcode = 0x318240, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 LessOrEquals')
SdvmInstUInt8GreaterThan = sdvmInstructionDef('SdvmInstUInt8GreaterThan', opcode = 0x318242, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 GreaterThan')
SdvmInstUInt8GreaterOrEquals = sdvmInstructionDef('SdvmInstUInt8GreaterOrEquals', opcode = 0x318244, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt8, arg1Type = SdvmTypeUInt8, description = 'UInt8 GreaterOrEquals')
SdvmInstUInt16Add = sdvmInstructionDef('SdvmInstUInt16Add', opcode = 0x39CE1E, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Add')
SdvmInstUInt16Sub = sdvmInstructionDef('SdvmInstUInt16Sub', opcode = 0x39CE20, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Sub')
SdvmInstUInt16Mul = sdvmInstructionDef('SdvmInstUInt16Mul', opcode = 0x39CE22, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Mul')
SdvmInstUInt16Div = sdvmInstructionDef('SdvmInstUInt16Div', opcode = 0x39CE24, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Div')
SdvmInstUInt16UDiv = sdvmInstructionDef('SdvmInstUInt16UDiv', opcode = 0x39CE26, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 UDiv')
SdvmInstUInt16Rem = sdvmInstructionDef('SdvmInstUInt16Rem', opcode = 0x39CE28, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Rem')
SdvmInstUInt16URem = sdvmInstructionDef('SdvmInstUInt16URem', opcode = 0x39CE2A, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 URem')
SdvmInstUInt16And = sdvmInstructionDef('SdvmInstUInt16And', opcode = 0x39CE2E, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 And')
SdvmInstUInt16Or = sdvmInstructionDef('SdvmInstUInt16Or', opcode = 0x39CE30, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Or')
SdvmInstUInt16Xor = sdvmInstructionDef('SdvmInstUInt16Xor', opcode = 0x39CE32, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Xor')
SdvmInstUInt16Lsl = sdvmInstructionDef('SdvmInstUInt16Lsl', opcode = 0x39CE34, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Lsl')
SdvmInstUInt16Lsr = sdvmInstructionDef('SdvmInstUInt16Lsr', opcode = 0x39CE36, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Lsr')
SdvmInstUInt16Asr = sdvmInstructionDef('SdvmInstUInt16Asr', opcode = 0x39CE38, type = SdvmTypeUInt16, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Asr')
SdvmInstUInt16Equals = sdvmInstructionDef('SdvmInstUInt16Equals', opcode = 0x39C23A, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 Equals')
SdvmInstUInt16NotEquals = sdvmInstructionDef('SdvmInstUInt16NotEquals', opcode = 0x39C23C, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 NotEquals')
SdvmInstUInt16LessThan = sdvmInstructionDef('SdvmInstUInt16LessThan', opcode = 0x39C23E, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 LessThan')
SdvmInstUInt16LessOrEquals = sdvmInstructionDef('SdvmInstUInt16LessOrEquals', opcode = 0x39C240, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 LessOrEquals')
SdvmInstUInt16GreaterThan = sdvmInstructionDef('SdvmInstUInt16GreaterThan', opcode = 0x39C242, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 GreaterThan')
SdvmInstUInt16GreaterOrEquals = sdvmInstructionDef('SdvmInstUInt16GreaterOrEquals', opcode = 0x39C244, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt16, arg1Type = SdvmTypeUInt16, description = 'UInt16 GreaterOrEquals')
SdvmInstUInt32Add = sdvmInstructionDef('SdvmInstUInt32Add', opcode = 0x42101E, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Add')
SdvmInstUInt32Sub = sdvmInstructionDef('SdvmInstUInt32Sub', opcode = 0x421020, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Sub')
SdvmInstUInt32Mul = sdvmInstructionDef('SdvmInstUInt32Mul', opcode = 0x421022, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Mul')
SdvmInstUInt32Div = sdvmInstructionDef('SdvmInstUInt32Div', opcode = 0x421024, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Div')
SdvmInstUInt32UDiv = sdvmInstructionDef('SdvmInstUInt32UDiv', opcode = 0x421026, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 UDiv')
SdvmInstUInt32Rem = sdvmInstructionDef('SdvmInstUInt32Rem', opcode = 0x421028, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Rem')
SdvmInstUInt32URem = sdvmInstructionDef('SdvmInstUInt32URem', opcode = 0x42102A, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 URem')
SdvmInstUInt32And = sdvmInstructionDef('SdvmInstUInt32And', opcode = 0x42102E, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 And')
SdvmInstUInt32Or = sdvmInstructionDef('SdvmInstUInt32Or', opcode = 0x421030, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Or')
SdvmInstUInt32Xor = sdvmInstructionDef('SdvmInstUInt32Xor', opcode = 0x421032, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Xor')
SdvmInstUInt32Lsl = sdvmInstructionDef('SdvmInstUInt32Lsl', opcode = 0x421034, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Lsl')
SdvmInstUInt32Lsr = sdvmInstructionDef('SdvmInstUInt32Lsr', opcode = 0x421036, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Lsr')
SdvmInstUInt32Asr = sdvmInstructionDef('SdvmInstUInt32Asr', opcode = 0x421038, type = SdvmTypeUInt32, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Asr')
SdvmInstUInt32Equals = sdvmInstructionDef('SdvmInstUInt32Equals', opcode = 0x42023A, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 Equals')
SdvmInstUInt32NotEquals = sdvmInstructionDef('SdvmInstUInt32NotEquals', opcode = 0x42023C, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 NotEquals')
SdvmInstUInt32LessThan = sdvmInstructionDef('SdvmInstUInt32LessThan', opcode = 0x42023E, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 LessThan')
SdvmInstUInt32LessOrEquals = sdvmInstructionDef('SdvmInstUInt32LessOrEquals', opcode = 0x420240, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 LessOrEquals')
SdvmInstUInt32GreaterThan = sdvmInstructionDef('SdvmInstUInt32GreaterThan', opcode = 0x420242, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 GreaterThan')
SdvmInstUInt32GreaterOrEquals = sdvmInstructionDef('SdvmInstUInt32GreaterOrEquals', opcode = 0x420244, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt32, arg1Type = SdvmTypeUInt32, description = 'UInt32 GreaterOrEquals')
SdvmInstUInt64Add = sdvmInstructionDef('SdvmInstUInt64Add', opcode = 0x4A521E, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Add')
SdvmInstUInt64Sub = sdvmInstructionDef('SdvmInstUInt64Sub', opcode = 0x4A5220, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Sub')
SdvmInstUInt64Mul = sdvmInstructionDef('SdvmInstUInt64Mul', opcode = 0x4A5222, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Mul')
SdvmInstUInt64Div = sdvmInstructionDef('SdvmInstUInt64Div', opcode = 0x4A5224, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Div')
SdvmInstUInt64UDiv = sdvmInstructionDef('SdvmInstUInt64UDiv', opcode = 0x4A5226, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 UDiv')
SdvmInstUInt64Rem = sdvmInstructionDef('SdvmInstUInt64Rem', opcode = 0x4A5228, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Rem')
SdvmInstUInt64URem = sdvmInstructionDef('SdvmInstUInt64URem', opcode = 0x4A522A, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 URem')
SdvmInstUInt64And = sdvmInstructionDef('SdvmInstUInt64And', opcode = 0x4A522E, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 And')
SdvmInstUInt64Or = sdvmInstructionDef('SdvmInstUInt64Or', opcode = 0x4A5230, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Or')
SdvmInstUInt64Xor = sdvmInstructionDef('SdvmInstUInt64Xor', opcode = 0x4A5232, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Xor')
SdvmInstUInt64Lsl = sdvmInstructionDef('SdvmInstUInt64Lsl', opcode = 0x4A5234, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Lsl')
SdvmInstUInt64Lsr = sdvmInstructionDef('SdvmInstUInt64Lsr', opcode = 0x4A5236, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Lsr')
SdvmInstUInt64Asr = sdvmInstructionDef('SdvmInstUInt64Asr', opcode = 0x4A5238, type = SdvmTypeUInt64, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Asr')
SdvmInstUInt64Equals = sdvmInstructionDef('SdvmInstUInt64Equals', opcode = 0x4A423A, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 Equals')
SdvmInstUInt64NotEquals = sdvmInstructionDef('SdvmInstUInt64NotEquals', opcode = 0x4A423C, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 NotEquals')
SdvmInstUInt64LessThan = sdvmInstructionDef('SdvmInstUInt64LessThan', opcode = 0x4A423E, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 LessThan')
SdvmInstUInt64LessOrEquals = sdvmInstructionDef('SdvmInstUInt64LessOrEquals', opcode = 0x4A4240, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 LessOrEquals')
SdvmInstUInt64GreaterThan = sdvmInstructionDef('SdvmInstUInt64GreaterThan', opcode = 0x4A4242, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 GreaterThan')
SdvmInstUInt64GreaterOrEquals = sdvmInstructionDef('SdvmInstUInt64GreaterOrEquals', opcode = 0x4A4244, type = SdvmTypeBoolean, arg0Type = SdvmTypeUInt64, arg1Type = SdvmTypeUInt64, description = 'UInt64 GreaterOrEquals')
SdvmInstFloat32Add = sdvmInstructionDef('SdvmInstFloat32Add', opcode = 0x6B5A1E, type = SdvmTypeFloat32, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Add')
SdvmInstFloat32Sub = sdvmInstructionDef('SdvmInstFloat32Sub', opcode = 0x6B5A20, type = SdvmTypeFloat32, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Sub')
SdvmInstFloat32Mul = sdvmInstructionDef('SdvmInstFloat32Mul', opcode = 0x6B5A22, type = SdvmTypeFloat32, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Mul')
SdvmInstFloat32Div = sdvmInstructionDef('SdvmInstFloat32Div', opcode = 0x6B5A24, type = SdvmTypeFloat32, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Div')
SdvmInstFloat32Rem = sdvmInstructionDef('SdvmInstFloat32Rem', opcode = 0x6B5A28, type = SdvmTypeFloat32, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Rem')
SdvmInstFloat32Equals = sdvmInstructionDef('SdvmInstFloat32Equals', opcode = 0x6B423A, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 Equals')
SdvmInstFloat32NotEquals = sdvmInstructionDef('SdvmInstFloat32NotEquals', opcode = 0x6B423C, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 NotEquals')
SdvmInstFloat32LessThan = sdvmInstructionDef('SdvmInstFloat32LessThan', opcode = 0x6B423E, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 LessThan')
SdvmInstFloat32LessOrEquals = sdvmInstructionDef('SdvmInstFloat32LessOrEquals', opcode = 0x6B4240, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 LessOrEquals')
SdvmInstFloat32GreaterThan = sdvmInstructionDef('SdvmInstFloat32GreaterThan', opcode = 0x6B4242, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 GreaterThan')
SdvmInstFloat32GreaterOrEquals = sdvmInstructionDef('SdvmInstFloat32GreaterOrEquals', opcode = 0x6B4244, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeFloat32, description = 'Float32 GreaterOrEquals')
SdvmInstFloat64Add = sdvmInstructionDef('SdvmInstFloat64Add', opcode = 0x739C1E, type = SdvmTypeFloat64, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Add')
SdvmInstFloat64Sub = sdvmInstructionDef('SdvmInstFloat64Sub', opcode = 0x739C20, type = SdvmTypeFloat64, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Sub')
SdvmInstFloat64Mul = sdvmInstructionDef('SdvmInstFloat64Mul', opcode = 0x739C22, type = SdvmTypeFloat64, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Mul')
SdvmInstFloat64Div = sdvmInstructionDef('SdvmInstFloat64Div', opcode = 0x739C24, type = SdvmTypeFloat64, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Div')
SdvmInstFloat64Rem = sdvmInstructionDef('SdvmInstFloat64Rem', opcode = 0x739C28, type = SdvmTypeFloat64, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Rem')
SdvmInstFloat64Equals = sdvmInstructionDef('SdvmInstFloat64Equals', opcode = 0x73823A, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 Equals')
SdvmInstFloat64NotEquals = sdvmInstructionDef('SdvmInstFloat64NotEquals', opcode = 0x73823C, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 NotEquals')
SdvmInstFloat64LessThan = sdvmInstructionDef('SdvmInstFloat64LessThan', opcode = 0x73823E, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 LessThan')
SdvmInstFloat64LessOrEquals = sdvmInstructionDef('SdvmInstFloat64LessOrEquals', opcode = 0x738240, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 LessOrEquals')
SdvmInstFloat64GreaterThan = sdvmInstructionDef('SdvmInstFloat64GreaterThan', opcode = 0x738242, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 GreaterThan')
SdvmInstFloat64GreaterOrEquals = sdvmInstructionDef('SdvmInstFloat64GreaterOrEquals', opcode = 0x738244, type = SdvmTypeBoolean, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeFloat64, description = 'Float64 GreaterOrEquals')
