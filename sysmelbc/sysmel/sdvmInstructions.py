from .sdvmInstructionTypes import *

SdvmTypeVoid = sdvmTypeDef('Void', code = 0)
SdvmTypeInteger = sdvmTypeDef('Integer', code = 1)
SdvmTypePointer = sdvmTypeDef('Pointer', code = 2)
SdvmTypeProcedureHandle = sdvmTypeDef('ProcedureHandle', code = 3)
SdvmTypeFatPointer = sdvmTypeDef('FatPointer', code = 5)
SdvmTypeFloat = sdvmTypeDef('Float', code = 6)
SdvmTypeFloatVector = sdvmTypeDef('FloatVector', code = 7)
SdvmTypeIntegerVector = sdvmTypeDef('IntegerVector', code = 8)
SdvmTypeInfo = sdvmTypeDef('Info', code = 9)
SdvmConstInt32 = sdvmConstantDef('SdvmConstInt32', opcode = 0x0101, type = SdvmTypeInteger, description = '"Int32 constant."')
SdvmConstInt64SExt = sdvmConstantDef('SdvmConstInt64SExt', opcode = 0x0103, type = SdvmTypeInteger, description = '"Signed extended small Int64 constant."')
SdvmConstInt64ZExt = sdvmConstantDef('SdvmConstInt64ZExt', opcode = 0x0105, type = SdvmTypeInteger, description = '"Zero extended small Int64 constant."')
SdvmConstInt64ConstSection = sdvmConstantDef('SdvmConstInt64ConstSection', opcode = 0x0107, type = SdvmTypeInteger, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstPointerSExt = sdvmConstantDef('SdvmConstPointerSExt', opcode = 0x0201, type = SdvmTypePointer, description = '"Signed extended pointer constant"')
SdvmConstPointerZExt = sdvmConstantDef('SdvmConstPointerZExt', opcode = 0x0203, type = SdvmTypePointer, description = '"Zero extended pointer constant"')
SdvmConstPointerConstSection = sdvmConstantDef('SdvmConstPointerConstSection', opcode = 0x0205, type = SdvmTypePointer, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstFatPointerNull = sdvmConstantDef('SdvmConstFatPointerNull', opcode = 0x0501, type = SdvmTypeFatPointer, description = '"Null fat pointer constant"')
SdvmConstFloat32 = sdvmConstantDef('SdvmConstFloat32', opcode = 0x0601, type = SdvmTypeFloat, description = '"IEEE 754 single precision floating point constant."')
SdvmConstFloat64Small32 = sdvmConstantDef('SdvmConstFloat64Small32', opcode = 0x0603, type = SdvmTypeFloat, description = '"IEEE 754 double precision floating point constant, encoded by extending IEEE 754 single precision constant."')
SdvmConstFloat64ConstSection = sdvmConstantDef('SdvmConstFloat64ConstSection', opcode = 0x0605, type = SdvmTypeFloat, description = '"IEEE 754 double precision floating point encoded in const section at zero extended offset."')
SdvmOpNop = sdvmOpcodeDef('SdvmOpNop', opcode = 0x0000, description = '"No operation"')
SdvmOpBeginArguments = sdvmOpcodeDef('SdvmOpBeginArguments', opcode = 0x0001, description = '"Begin fetching arguments"')
SdvmOpBeginCall = sdvmOpcodeDef('SdvmOpBeginCall', opcode = 0x0002, description = '"Begin call"')
SdvmOpArg = sdvmOpcodeDef('SdvmOpArg', opcode = 0x0003, description = '"Fetch argument"')
SdvmOpCallArg = sdvmOpcodeDef('SdvmOpCallArg', opcode = 0x0004, description = '"Pass call argument"')
SdvmOpCall = sdvmOpcodeDef('SdvmOpCall', opcode = 0x0005, description = '"Call procedure"')
SdvmOpReturn = sdvmOpcodeDef('SdvmOpReturn', opcode = 0x0006, description = '"Return value"')
SdvmInstNop = sdvmInstructionDef('SdvmInstNop', opcode = 0x0000, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'No operation')
SdvmInstBeginArguments = sdvmInstructionDef('SdvmInstBeginArguments', opcode = 0x990002, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin fetching arguments. Argument count. Calling convention.')
SdvmInstBeginCall = sdvmInstructionDef('SdvmInstBeginCall', opcode = 0x990004, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin call. Argument count. Calling convention index.')
SdvmInstArgInteger = sdvmInstructionDef('SdvmInstArgInteger', opcode = 0x1006, type = SdvmTypeInteger, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer argument')
SdvmInstArgPointer = sdvmInstructionDef('SdvmInstArgPointer', opcode = 0x2006, type = SdvmTypePointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch pointer argument')
SdvmInstArgProcedureHandle = sdvmInstructionDef('SdvmInstArgProcedureHandle', opcode = 0x3006, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch procedure handle argument')
SdvmInstArgFatPointer = sdvmInstructionDef('SdvmInstArgFatPointer', opcode = 0x5006, type = SdvmTypeFatPointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch fat pointer argument')
SdvmInstArgFloat = sdvmInstructionDef('SdvmInstArgFloat', opcode = 0x6006, type = SdvmTypeFloat, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float argument')
SdvmInstArgFloatVector = sdvmInstructionDef('SdvmInstArgFloatVector', opcode = 0x7006, type = SdvmTypeFloatVector, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float vector argument')
SdvmInstArgIntegerVector = sdvmInstructionDef('SdvmInstArgIntegerVector', opcode = 0x8006, type = SdvmTypeIntegerVector, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer vector argument')
SdvmInstCallArgInteger = sdvmInstructionDef('SdvmInstCallArgInteger', opcode = 0x931008, type = SdvmTypeInteger, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer argument')
SdvmInstCallArgPointer = sdvmInstructionDef('SdvmInstCallArgPointer', opcode = 0x932008, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call pointer argument')
SdvmInstCallArgProcedureHandle = sdvmInstructionDef('SdvmInstCallArgProcedureHandle', opcode = 0x933008, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call procedure handle argument')
SdvmInstCallArgFatPointer = sdvmInstructionDef('SdvmInstCallArgFatPointer', opcode = 0x935008, type = SdvmTypeFatPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call fat pointer argument')
SdvmInstCallArgFloat = sdvmInstructionDef('SdvmInstCallArgFloat', opcode = 0x936008, type = SdvmTypeFloat, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float argument')
SdvmInstCallArgFloatVector = sdvmInstructionDef('SdvmInstCallArgFloatVector', opcode = 0x937008, type = SdvmTypeFloatVector, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float vector argument')
SdvmInstCallArgIntegerVector = sdvmInstructionDef('SdvmInstCallArgIntegerVector', opcode = 0x938008, type = SdvmTypeIntegerVector, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer vector argument')
SdvmInstCallVoid = sdvmInstructionDef('SdvmInstCallVoid', opcode = 0x93000A, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call void returning procedure')
SdvmInstCallInteger = sdvmInstructionDef('SdvmInstCallInteger', opcode = 0x93100A, type = SdvmTypeInteger, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer returning procedure')
SdvmInstCallPointer = sdvmInstructionDef('SdvmInstCallPointer', opcode = 0x93200A, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call pointer returning procedure')
SdvmInstCallProcedureHandle = sdvmInstructionDef('SdvmInstCallProcedureHandle', opcode = 0x93300A, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call procedure handle returning procedure')
SdvmInstCallFatPointer = sdvmInstructionDef('SdvmInstCallFatPointer', opcode = 0x93500A, type = SdvmTypeFatPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call fat pointer')
SdvmInstCallFloat = sdvmInstructionDef('SdvmInstCallFloat', opcode = 0x93600A, type = SdvmTypeFloat, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float')
SdvmInstCallFloatVector = sdvmInstructionDef('SdvmInstCallFloatVector', opcode = 0x93700A, type = SdvmTypeFloatVector, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float vector')
SdvmInstCallIntegerVector = sdvmInstructionDef('SdvmInstCallIntegerVector', opcode = 0x93800A, type = SdvmTypeIntegerVector, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer vector')
SdvmInstReturnVoid = sdvmInstructionDef('SdvmInstReturnVoid', opcode = 0x000C, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnInteger = sdvmInstructionDef('SdvmInstReturnInteger', opcode = 0x1000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInteger, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnPointer = sdvmInstructionDef('SdvmInstReturnPointer', opcode = 0x2000C, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Return pointer')
SdvmInstReturnProcedureHandle = sdvmInstructionDef('SdvmInstReturnProcedureHandle', opcode = 0x3000C, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Return procedure handle')
SdvmInstReturnFatPointer = sdvmInstructionDef('SdvmInstReturnFatPointer', opcode = 0x5000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFatPointer, arg1Type = SdvmTypeVoid, description = 'Return fat pointer')
SdvmInstReturnFloat = sdvmInstructionDef('SdvmInstReturnFloat', opcode = 0x6000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat, arg1Type = SdvmTypeVoid, description = 'Return float')
SdvmInstReturnFloatVector = sdvmInstructionDef('SdvmInstReturnFloatVector', opcode = 0x7000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector, arg1Type = SdvmTypeVoid, description = 'Return float vector')
SdvmInstReturnIntegerVector = sdvmInstructionDef('SdvmInstReturnIntegerVector', opcode = 0x8000C, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector, arg1Type = SdvmTypeVoid, description = 'Return integer vector')
