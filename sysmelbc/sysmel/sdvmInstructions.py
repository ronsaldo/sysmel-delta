from .sdvmInstructionTypes import *

SdvmTypeVoid = sdvmTypeDef('Void', code = 0)
SdvmTypeInteger = sdvmTypeDef('Integer', code = 1)
SdvmTypePointer = sdvmTypeDef('Pointer', code = 2)
SdvmTypeProcedureHandle = sdvmTypeDef('ProcedureHandle', code = 3)
SdvmTypeGCPointer = sdvmTypeDef('GCPointer', code = 4)
SdvmTypeFloat = sdvmTypeDef('Float', code = 5)
SdvmTypeInfo = sdvmTypeDef('Info', code = 6)
SdvmTypeLabel = sdvmTypeDef('Label', code = 7)
SdvmTypeFloatVector128 = sdvmTypeDef('FloatVector128', code = 8)
SdvmTypeIntegerVector128 = sdvmTypeDef('IntegerVector128', code = 9)
SdvmTypeFloatVector256 = sdvmTypeDef('FloatVector256', code = 10)
SdvmTypeIntegerVector256 = sdvmTypeDef('IntegerVector256', code = 11)
SdvmConstInt32 = sdvmConstantDef('SdvmConstInt32', opcode = 0x0101, type = SdvmTypeInteger, description = '"Int32 constant."')
SdvmConstInt64SExt = sdvmConstantDef('SdvmConstInt64SExt', opcode = 0x0103, type = SdvmTypeInteger, description = '"Signed extended small Int64 constant."')
SdvmConstInt64ZExt = sdvmConstantDef('SdvmConstInt64ZExt', opcode = 0x0105, type = SdvmTypeInteger, description = '"Zero extended small Int64 constant."')
SdvmConstInt64ConstSection = sdvmConstantDef('SdvmConstInt64ConstSection', opcode = 0x0107, type = SdvmTypeInteger, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstPointerSExt = sdvmConstantDef('SdvmConstPointerSExt', opcode = 0x0201, type = SdvmTypePointer, description = '"Signed extended pointer constant"')
SdvmConstPointerZExt = sdvmConstantDef('SdvmConstPointerZExt', opcode = 0x0203, type = SdvmTypePointer, description = '"Zero extended pointer constant"')
SdvmConstPointerConstSection = sdvmConstantDef('SdvmConstPointerConstSection', opcode = 0x0205, type = SdvmTypePointer, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstGCPointerNull = sdvmConstantDef('SdvmConstGCPointerNull', opcode = 0x0401, type = SdvmTypeGCPointer, description = '"Null fat pointer constant"')
SdvmConstFloat32 = sdvmConstantDef('SdvmConstFloat32', opcode = 0x0501, type = SdvmTypeFloat, description = '"IEEE 754 single precision floating point constant."')
SdvmConstFloat64Small32 = sdvmConstantDef('SdvmConstFloat64Small32', opcode = 0x0503, type = SdvmTypeFloat, description = '"IEEE 754 double precision floating point constant, encoded by extending IEEE 754 single precision constant."')
SdvmConstFloat64ConstSection = sdvmConstantDef('SdvmConstFloat64ConstSection', opcode = 0x0505, type = SdvmTypeFloat, description = '"IEEE 754 double precision floating point encoded in const section at zero extended offset."')
SdvmConstLabel = sdvmConstantDef('SdvmConstLabel', opcode = 0x0701, type = SdvmTypeLabel, description = '"Label"')
SdvmOpNop = sdvmOpcodeDef('SdvmOpNop', opcode = 0x0000, description = '"No operation"')
SdvmOpBeginArguments = sdvmOpcodeDef('SdvmOpBeginArguments', opcode = 0x0001, description = '"Begin fetching arguments"')
SdvmOpBeginCall = sdvmOpcodeDef('SdvmOpBeginCall', opcode = 0x0002, description = '"Begin call"')
SdvmOpArg = sdvmOpcodeDef('SdvmOpArg', opcode = 0x0003, description = '"Fetch argument"')
SdvmOpCallArg = sdvmOpcodeDef('SdvmOpCallArg', opcode = 0x0004, description = '"Pass call argument"')
SdvmOpCall = sdvmOpcodeDef('SdvmOpCall', opcode = 0x0005, description = '"Call procedure"')
SdvmOpReturn = sdvmOpcodeDef('SdvmOpReturn', opcode = 0x0006, description = '"Return value"')
SdvmInstNop = sdvmInstructionDef('SdvmInstNop', opcode = 0x0000, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'No operation')
SdvmInstBeginArguments = sdvmInstructionDef('SdvmInstBeginArguments', opcode = 0x660002, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin fetching arguments. Argument count. Calling convention.')
SdvmInstBeginCall = sdvmInstructionDef('SdvmInstBeginCall', opcode = 0x660004, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin call. Argument count. Calling convention index.')
SdvmInstArgInteger = sdvmInstructionDef('SdvmInstArgInteger', opcode = 0x1006, type = SdvmTypeInteger, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer argument')
SdvmInstArgPointer = sdvmInstructionDef('SdvmInstArgPointer', opcode = 0x2006, type = SdvmTypePointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch pointer argument')
SdvmInstArgProcedureHandle = sdvmInstructionDef('SdvmInstArgProcedureHandle', opcode = 0x3006, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch procedure handle argument')
SdvmInstArgGCPointer = sdvmInstructionDef('SdvmInstArgGCPointer', opcode = 0x4006, type = SdvmTypeGCPointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch fat pointer argument')
SdvmInstArgFloat = sdvmInstructionDef('SdvmInstArgFloat', opcode = 0x5006, type = SdvmTypeFloat, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float argument')
SdvmInstArgFloatVector128 = sdvmInstructionDef('SdvmInstArgFloatVector128', opcode = 0x8006, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float vector 128 argument')
SdvmInstArgIntegerVector128 = sdvmInstructionDef('SdvmInstArgIntegerVector128', opcode = 0x9006, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer vector 128 argument')
SdvmInstArgFloatVector256 = sdvmInstructionDef('SdvmInstArgFloatVector256', opcode = 0xA006, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float vector 256 argument')
SdvmInstArgIntegerVector256 = sdvmInstructionDef('SdvmInstArgIntegerVector256', opcode = 0xB006, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer 256 vector argument')
SdvmInstCallArgInteger = sdvmInstructionDef('SdvmInstCallArgInteger', opcode = 0x631008, type = SdvmTypeInteger, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer argument')
SdvmInstCallArgPointer = sdvmInstructionDef('SdvmInstCallArgPointer', opcode = 0x632008, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call pointer argument')
SdvmInstCallArgProcedureHandle = sdvmInstructionDef('SdvmInstCallArgProcedureHandle', opcode = 0x633008, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call procedure handle argument')
SdvmInstCallArgGCPointer = sdvmInstructionDef('SdvmInstCallArgGCPointer', opcode = 0x634008, type = SdvmTypeGCPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call fat pointer argument')
SdvmInstCallArgFloat = sdvmInstructionDef('SdvmInstCallArgFloat', opcode = 0x635008, type = SdvmTypeFloat, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float argument')
SdvmInstCallArgFloatVector128 = sdvmInstructionDef('SdvmInstCallArgFloatVector128', opcode = 0x638008, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float vector argument')
SdvmInstCallArgIntegerVector128 = sdvmInstructionDef('SdvmInstCallArgIntegerVector128', opcode = 0x639008, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer vector argument')
SdvmInstCallArgFloatVector256 = sdvmInstructionDef('SdvmInstCallArgFloatVector256', opcode = 0x63A008, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float vector argument')
SdvmInstCallArgIntegerVector256 = sdvmInstructionDef('SdvmInstCallArgIntegerVector256', opcode = 0x63B008, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer vector argument')
SdvmInstCallVoid = sdvmInstructionDef('SdvmInstCallVoid', opcode = 0x63000A, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call void returning procedure')
SdvmInstCallInteger = sdvmInstructionDef('SdvmInstCallInteger', opcode = 0x63100A, type = SdvmTypeInteger, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer returning procedure')
SdvmInstCallPointer = sdvmInstructionDef('SdvmInstCallPointer', opcode = 0x63200A, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call pointer returning procedure')
SdvmInstCallProcedureHandle = sdvmInstructionDef('SdvmInstCallProcedureHandle', opcode = 0x63300A, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call procedure handle returning procedure')
SdvmInstCallGCPointer = sdvmInstructionDef('SdvmInstCallGCPointer', opcode = 0x63400A, type = SdvmTypeGCPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call fat pointer')
SdvmInstCallFloat = sdvmInstructionDef('SdvmInstCallFloat', opcode = 0x63500A, type = SdvmTypeFloat, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float')
SdvmInstCallFloatVector128 = sdvmInstructionDef('SdvmInstCallFloatVector128', opcode = 0x63800A, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float vector')
SdvmInstCallIntegerVector128 = sdvmInstructionDef('SdvmInstCallIntegerVector128', opcode = 0x63900A, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer vector')
SdvmInstCallFloatVector256 = sdvmInstructionDef('SdvmInstCallFloatVector256', opcode = 0x63A00A, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float vector')
SdvmInstCallIntegerVector256 = sdvmInstructionDef('SdvmInstCallIntegerVector256', opcode = 0x63B00A, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer vector')
SdvmInstReturnVoid = sdvmInstructionDef('SdvmInstReturnVoid', opcode = 0x000C, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnInteger = sdvmInstructionDef('SdvmInstReturnInteger', opcode = 0x1000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInteger, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnPointer = sdvmInstructionDef('SdvmInstReturnPointer', opcode = 0x2000C, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Return pointer')
SdvmInstReturnProcedureHandle = sdvmInstructionDef('SdvmInstReturnProcedureHandle', opcode = 0x3000C, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Return procedure handle')
SdvmInstReturnGCPointer = sdvmInstructionDef('SdvmInstReturnGCPointer', opcode = 0x4000C, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Return fat pointer')
SdvmInstReturnFloat = sdvmInstructionDef('SdvmInstReturnFloat', opcode = 0x5000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat, arg1Type = SdvmTypeVoid, description = 'Return float')
SdvmInstReturnFloatVector128 = sdvmInstructionDef('SdvmInstReturnFloatVector128', opcode = 0x8000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector128, arg1Type = SdvmTypeVoid, description = 'Return float vector')
SdvmInstReturnIntegerVector128 = sdvmInstructionDef('SdvmInstReturnIntegerVector128', opcode = 0x9000C, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector128, arg1Type = SdvmTypeVoid, description = 'Return integer vector')
SdvmInstReturnFloatVector256 = sdvmInstructionDef('SdvmInstReturnFloatVector256', opcode = 0xA000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector256, arg1Type = SdvmTypeVoid, description = 'Return float vector')
SdvmInstReturnIntegerVector256 = sdvmInstructionDef('SdvmInstReturnIntegerVector256', opcode = 0xB000C, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector256, arg1Type = SdvmTypeVoid, description = 'Return integer vector')
