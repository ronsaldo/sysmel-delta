from .sdvmInstructionTypes import *

SdvmTypeVoid = sdvmTypeDef('Void', code = 0)
SdvmTypeInt8 = sdvmTypeDef('Int8', code = 1)
SdvmTypeInt16 = sdvmTypeDef('Int16', code = 2)
SdvmTypeInt32 = sdvmTypeDef('Int32', code = 3)
SdvmTypeInt64 = sdvmTypeDef('Int64', code = 4)
SdvmTypePointer = sdvmTypeDef('Pointer', code = 5)
SdvmTypeProcedureHandle = sdvmTypeDef('ProcedureHandle', code = 6)
SdvmTypeGCPointer = sdvmTypeDef('GCPointer', code = 7)
SdvmTypeFloat32 = sdvmTypeDef('Float32', code = 8)
SdvmTypeFloat64 = sdvmTypeDef('Float64', code = 9)
SdvmTypeInfo = sdvmTypeDef('Info', code = 10)
SdvmTypeLabel = sdvmTypeDef('Label', code = 11)
SdvmTypeFloatVector128 = sdvmTypeDef('FloatVector128', code = 12)
SdvmTypeIntegerVector128 = sdvmTypeDef('IntegerVector128', code = 13)
SdvmTypeFloatVector256 = sdvmTypeDef('FloatVector256', code = 14)
SdvmTypeIntegerVector256 = sdvmTypeDef('IntegerVector256', code = 15)
SdvmConstInt8 = sdvmConstantDef('SdvmConstInt8', opcode = 0x0101, type = SdvmTypeInt8, description = '"Int8 constant."')
SdvmConstInt16 = sdvmConstantDef('SdvmConstInt16', opcode = 0x0201, type = SdvmTypeInt16, description = '"Int16 constant."')
SdvmConstInt32 = sdvmConstantDef('SdvmConstInt32', opcode = 0x0301, type = SdvmTypeInt32, description = '"Int32 constant."')
SdvmConstInt64SExt = sdvmConstantDef('SdvmConstInt64SExt', opcode = 0x0403, type = SdvmTypeInt64, description = '"Signed extended small Int64 constant."')
SdvmConstInt64ZExt = sdvmConstantDef('SdvmConstInt64ZExt', opcode = 0x0405, type = SdvmTypeInt64, description = '"Zero extended small Int64 constant."')
SdvmConstInt64ConstSection = sdvmConstantDef('SdvmConstInt64ConstSection', opcode = 0x0407, type = SdvmTypeInt64, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstPointerSExt = sdvmConstantDef('SdvmConstPointerSExt', opcode = 0x0501, type = SdvmTypePointer, description = '"Signed extended pointer constant"')
SdvmConstPointerZExt = sdvmConstantDef('SdvmConstPointerZExt', opcode = 0x0503, type = SdvmTypePointer, description = '"Zero extended pointer constant"')
SdvmConstPointerConstSection = sdvmConstantDef('SdvmConstPointerConstSection', opcode = 0x0505, type = SdvmTypePointer, description = '"Int64 literal encoded in const section at zero extended offset."')
SdvmConstGCPointerNull = sdvmConstantDef('SdvmConstGCPointerNull', opcode = 0x0701, type = SdvmTypeGCPointer, description = '"Null fat pointer constant"')
SdvmConstFloat32 = sdvmConstantDef('SdvmConstFloat32', opcode = 0x0801, type = SdvmTypeFloat32, description = '"IEEE 754 single precision floating point constant."')
SdvmConstFloat64Small32 = sdvmConstantDef('SdvmConstFloat64Small32', opcode = 0x0903, type = SdvmTypeFloat64, description = '"IEEE 754 double precision floating point constant, encoded by extending IEEE 754 single precision constant."')
SdvmConstFloat64ConstSection = sdvmConstantDef('SdvmConstFloat64ConstSection', opcode = 0x0905, type = SdvmTypeFloat64, description = '"IEEE 754 double precision floating point encoded in const section at zero extended offset."')
SdvmConstLabel = sdvmConstantDef('SdvmConstLabel', opcode = 0x0B01, type = SdvmTypeLabel, description = '"Label"')
SdvmOpNop = sdvmOpcodeDef('SdvmOpNop', opcode = 0x0000, description = '"No operation"')
SdvmOpBeginArguments = sdvmOpcodeDef('SdvmOpBeginArguments', opcode = 0x0001, description = '"Begin fetching arguments"')
SdvmOpBeginCall = sdvmOpcodeDef('SdvmOpBeginCall', opcode = 0x0002, description = '"Begin call"')
SdvmOpArg = sdvmOpcodeDef('SdvmOpArg', opcode = 0x0003, description = '"Fetch argument"')
SdvmOpCallArg = sdvmOpcodeDef('SdvmOpCallArg', opcode = 0x0004, description = '"Pass call argument"')
SdvmOpCall = sdvmOpcodeDef('SdvmOpCall', opcode = 0x0005, description = '"Call procedure"')
SdvmOpReturn = sdvmOpcodeDef('SdvmOpReturn', opcode = 0x0006, description = '"Return value"')
SdvmOpAdd = sdvmOpcodeDef('SdvmOpAdd', opcode = 0x0007, description = '"Addition"')
SdvmOpSub = sdvmOpcodeDef('SdvmOpSub', opcode = 0x0008, description = '"Subtraction"')
SdvmOpMul = sdvmOpcodeDef('SdvmOpMul', opcode = 0x0009, description = '"Multiplication"')
SdvmOpDiv = sdvmOpcodeDef('SdvmOpDiv', opcode = 0x000A, description = '"Division"')
SdvmOpUDiv = sdvmOpcodeDef('SdvmOpUDiv', opcode = 0x000B, description = '"Unsigned division"')
SdvmOpRem = sdvmOpcodeDef('SdvmOpRem', opcode = 0x000C, description = '"Remainder"')
SdvmOpSqrt = sdvmOpcodeDef('SdvmOpSqrt', opcode = 0x000D, description = '"Sqrt"')
SdvmOpAnd = sdvmOpcodeDef('SdvmOpAnd', opcode = 0x000E, description = '"Bitwise and"')
SdvmOpOr = sdvmOpcodeDef('SdvmOpOr', opcode = 0x000F, description = '"Bitwise or"')
SdvmOpXor = sdvmOpcodeDef('SdvmOpXor', opcode = 0x0010, description = '"Bitwise xor"')
SdvmOpLsl = sdvmOpcodeDef('SdvmOpLsl', opcode = 0x0011, description = '"Logical shift left"')
SdvmOpLsr = sdvmOpcodeDef('SdvmOpLsr', opcode = 0x0012, description = '"Logical shift right"')
SdvmOpAsl = sdvmOpcodeDef('SdvmOpAsl', opcode = 0x0013, description = '"Arithmetic shift right"')
SdvmInstNop = sdvmInstructionDef('SdvmInstNop', opcode = 0x0000, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'No operation')
SdvmInstBeginArguments = sdvmInstructionDef('SdvmInstBeginArguments', opcode = 0xAA0002, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin fetching arguments. Argument count. Calling convention.')
SdvmInstBeginCall = sdvmInstructionDef('SdvmInstBeginCall', opcode = 0xAA0004, type = SdvmTypeVoid, arg0Type = SdvmTypeInfo, arg1Type = SdvmTypeInfo, description = 'Begin call. Argument count. Calling convention index.')
SdvmInstArgInt8 = sdvmInstructionDef('SdvmInstArgInt8', opcode = 0x1006, type = SdvmTypeInt8, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch int8 argument')
SdvmInstArgInt16 = sdvmInstructionDef('SdvmInstArgInt16', opcode = 0x2006, type = SdvmTypeInt16, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch int16 argument')
SdvmInstArgInt32 = sdvmInstructionDef('SdvmInstArgInt32', opcode = 0x3006, type = SdvmTypeInt32, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch int32 argument')
SdvmInstArgInt64 = sdvmInstructionDef('SdvmInstArgInt64', opcode = 0x4006, type = SdvmTypeInt64, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch int64 argument')
SdvmInstArgPointer = sdvmInstructionDef('SdvmInstArgPointer', opcode = 0x5006, type = SdvmTypePointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch pointer argument')
SdvmInstArgProcedureHandle = sdvmInstructionDef('SdvmInstArgProcedureHandle', opcode = 0x6006, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch procedure handle argument')
SdvmInstArgGCPointer = sdvmInstructionDef('SdvmInstArgGCPointer', opcode = 0x7006, type = SdvmTypeGCPointer, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch fat pointer argument')
SdvmInstArgFloat32 = sdvmInstructionDef('SdvmInstArgFloat32', opcode = 0x8006, type = SdvmTypeFloat32, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float32 argument')
SdvmInstArgFloat64 = sdvmInstructionDef('SdvmInstArgFloat64', opcode = 0x9006, type = SdvmTypeFloat64, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float64 argument')
SdvmInstArgFloatVector128 = sdvmInstructionDef('SdvmInstArgFloatVector128', opcode = 0xC006, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float vector 128 argument')
SdvmInstArgIntegerVector128 = sdvmInstructionDef('SdvmInstArgIntegerVector128', opcode = 0xD006, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer vector 128 argument')
SdvmInstArgFloatVector256 = sdvmInstructionDef('SdvmInstArgFloatVector256', opcode = 0xE006, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch float vector 256 argument')
SdvmInstArgIntegerVector256 = sdvmInstructionDef('SdvmInstArgIntegerVector256', opcode = 0xF006, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Fetch integer 256 vector argument')
SdvmInstCallArgInt8 = sdvmInstructionDef('SdvmInstCallArgInt8', opcode = 0xA61008, type = SdvmTypeInt8, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call int8 argument')
SdvmInstCallArgInt16 = sdvmInstructionDef('SdvmInstCallArgInt16', opcode = 0xA62008, type = SdvmTypeInt16, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call int16 argument')
SdvmInstCallArgInt32 = sdvmInstructionDef('SdvmInstCallArgInt32', opcode = 0xA63008, type = SdvmTypeInt32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call int32 argument')
SdvmInstCallArgInt64 = sdvmInstructionDef('SdvmInstCallArgInt64', opcode = 0xA64008, type = SdvmTypeInt64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call int64 argument')
SdvmInstCallArgPointer = sdvmInstructionDef('SdvmInstCallArgPointer', opcode = 0xA65008, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call pointer argument')
SdvmInstCallArgProcedureHandle = sdvmInstructionDef('SdvmInstCallArgProcedureHandle', opcode = 0xA66008, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call procedure handle argument')
SdvmInstCallArgGCPointer = sdvmInstructionDef('SdvmInstCallArgGCPointer', opcode = 0xA67008, type = SdvmTypeGCPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call fat pointer argument')
SdvmInstCallArgFloat32 = sdvmInstructionDef('SdvmInstCallArgFloat32', opcode = 0xA68008, type = SdvmTypeFloat32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float 32 argument')
SdvmInstCallArgFloat64 = sdvmInstructionDef('SdvmInstCallArgFloat64', opcode = 0xA69008, type = SdvmTypeFloat64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float 64 argument')
SdvmInstCallArgFloatVector128 = sdvmInstructionDef('SdvmInstCallArgFloatVector128', opcode = 0xA6C008, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float vector argument')
SdvmInstCallArgIntegerVector128 = sdvmInstructionDef('SdvmInstCallArgIntegerVector128', opcode = 0xA6D008, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer vector argument')
SdvmInstCallArgFloatVector256 = sdvmInstructionDef('SdvmInstCallArgFloatVector256', opcode = 0xA6E008, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call float vector argument')
SdvmInstCallArgIntegerVector256 = sdvmInstructionDef('SdvmInstCallArgIntegerVector256', opcode = 0xA6F008, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Pass call integer vector argument')
SdvmInstCallVoid = sdvmInstructionDef('SdvmInstCallVoid', opcode = 0xA6000A, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call void returning procedure')
SdvmInstCallInt8 = sdvmInstructionDef('SdvmInstCallInt8', opcode = 0xA6100A, type = SdvmTypeInt8, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call int8 returning procedure')
SdvmInstCallInt16 = sdvmInstructionDef('SdvmInstCallInt16', opcode = 0xA6200A, type = SdvmTypeInt16, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call int16 returning procedure')
SdvmInstCallInt32 = sdvmInstructionDef('SdvmInstCallInt32', opcode = 0xA6300A, type = SdvmTypeInt32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call int32 returning procedure')
SdvmInstCallInt64 = sdvmInstructionDef('SdvmInstCallInt64', opcode = 0xA6400A, type = SdvmTypeInt64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call int64 returning procedure')
SdvmInstCallPointer = sdvmInstructionDef('SdvmInstCallPointer', opcode = 0xA6500A, type = SdvmTypePointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call pointer returning procedure')
SdvmInstCallProcedureHandle = sdvmInstructionDef('SdvmInstCallProcedureHandle', opcode = 0xA6600A, type = SdvmTypeProcedureHandle, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call procedure handle returning procedure')
SdvmInstCallGCPointer = sdvmInstructionDef('SdvmInstCallGCPointer', opcode = 0xA6700A, type = SdvmTypeGCPointer, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call fat pointer')
SdvmInstCallFloat32 = sdvmInstructionDef('SdvmInstCallFloat32', opcode = 0xA6800A, type = SdvmTypeFloat32, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float32')
SdvmInstCallFloat64 = sdvmInstructionDef('SdvmInstCallFloat64', opcode = 0xA6900A, type = SdvmTypeFloat64, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float64')
SdvmInstCallFloatVector128 = sdvmInstructionDef('SdvmInstCallFloatVector128', opcode = 0xA6C00A, type = SdvmTypeFloatVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float vector')
SdvmInstCallIntegerVector128 = sdvmInstructionDef('SdvmInstCallIntegerVector128', opcode = 0xA6D00A, type = SdvmTypeIntegerVector128, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer vector')
SdvmInstCallFloatVector256 = sdvmInstructionDef('SdvmInstCallFloatVector256', opcode = 0xA6E00A, type = SdvmTypeFloatVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call float vector')
SdvmInstCallIntegerVector256 = sdvmInstructionDef('SdvmInstCallIntegerVector256', opcode = 0xA6F00A, type = SdvmTypeIntegerVector256, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeInfo, description = 'Call integer vector')
SdvmInstReturnVoid = sdvmInstructionDef('SdvmInstReturnVoid', opcode = 0x000C, type = SdvmTypeVoid, arg0Type = SdvmTypeVoid, arg1Type = SdvmTypeVoid, description = 'Return void')
SdvmInstReturnInt8 = sdvmInstructionDef('SdvmInstReturnInt8', opcode = 0x1000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInt8, arg1Type = SdvmTypeVoid, description = 'Return int8')
SdvmInstReturnInt16 = sdvmInstructionDef('SdvmInstReturnInt16', opcode = 0x2000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInt16, arg1Type = SdvmTypeVoid, description = 'Return int16')
SdvmInstReturnInt32 = sdvmInstructionDef('SdvmInstReturnInt32', opcode = 0x3000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInt32, arg1Type = SdvmTypeVoid, description = 'Return int32')
SdvmInstReturnInt64 = sdvmInstructionDef('SdvmInstReturnInt64', opcode = 0x4000C, type = SdvmTypeVoid, arg0Type = SdvmTypeInt64, arg1Type = SdvmTypeVoid, description = 'Return int64')
SdvmInstReturnPointer = sdvmInstructionDef('SdvmInstReturnPointer', opcode = 0x5000C, type = SdvmTypeVoid, arg0Type = SdvmTypePointer, arg1Type = SdvmTypeVoid, description = 'Return pointer')
SdvmInstReturnProcedureHandle = sdvmInstructionDef('SdvmInstReturnProcedureHandle', opcode = 0x6000C, type = SdvmTypeVoid, arg0Type = SdvmTypeProcedureHandle, arg1Type = SdvmTypeVoid, description = 'Return procedure handle')
SdvmInstReturnGCPointer = sdvmInstructionDef('SdvmInstReturnGCPointer', opcode = 0x7000C, type = SdvmTypeVoid, arg0Type = SdvmTypeGCPointer, arg1Type = SdvmTypeVoid, description = 'Return fat pointer')
SdvmInstReturnFloat32 = sdvmInstructionDef('SdvmInstReturnFloat32', opcode = 0x8000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat32, arg1Type = SdvmTypeVoid, description = 'Return float 32')
SdvmInstReturnFloat64 = sdvmInstructionDef('SdvmInstReturnFloat64', opcode = 0x9000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloat64, arg1Type = SdvmTypeVoid, description = 'Return float 64')
SdvmInstReturnFloatVector128 = sdvmInstructionDef('SdvmInstReturnFloatVector128', opcode = 0xC000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector128, arg1Type = SdvmTypeVoid, description = 'Return float vector')
SdvmInstReturnIntegerVector128 = sdvmInstructionDef('SdvmInstReturnIntegerVector128', opcode = 0xD000C, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector128, arg1Type = SdvmTypeVoid, description = 'Return integer vector')
SdvmInstReturnFloatVector256 = sdvmInstructionDef('SdvmInstReturnFloatVector256', opcode = 0xE000C, type = SdvmTypeVoid, arg0Type = SdvmTypeFloatVector256, arg1Type = SdvmTypeVoid, description = 'Return float vector')
SdvmInstReturnIntegerVector256 = sdvmInstructionDef('SdvmInstReturnIntegerVector256', opcode = 0xF000C, type = SdvmTypeVoid, arg0Type = SdvmTypeIntegerVector256, arg1Type = SdvmTypeVoid, description = 'Return integer vector')
